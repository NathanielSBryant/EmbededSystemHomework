
bin/Debug/homework4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  000009ec  00000a80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  000009c4  000009c4  00000a58  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          00000087  00800126  00800126  00000aa6  2**0
                  ALLOC
  4 .stab         00000c60  00000000  00000000  00000aa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      000012bc  00000000  00000000  00001708  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  000029c4  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000029d8  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00002a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  000035ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  000035c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <__vector_18>
  4c:	0c 94 a2 03 	jmp	0x744	; 0x744 <__vector_19>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ee       	ldi	r30, 0xEC	; 236
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 3a       	cpi	r26, 0xAD	; 173
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 e0 04 	jmp	0x9c0	; 0x9c0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include "temp.h"



int main(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	00 d0       	rcall	.+0      	; 0xac <main+0x6>
  ac:	00 d0       	rcall	.+0      	; 0xae <main+0x8>
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
    uart_init();
  b2:	0e 94 20 01 	call	0x240	; 0x240 <uart_init>
    temp_init();
  b6:	0e 94 85 00 	call	0x10a	; 0x10a <temp_init>
    uart_writestr("SER 486 HW4 â€“ Nathaniel Bryant\n\r");
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	0e 94 26 01 	call	0x24c	; 0x24c <uart_writestr>
    long int tempature;


    while(1)
    {
        temp_start();
  c2:	0e 94 c5 00 	call	0x18a	; 0x18a <temp_start>

        while(temp_is_data_read())
  c6:	00 00       	nop
  c8:	0e 94 b1 00 	call	0x162	; 0x162 <temp_is_data_read>
  cc:	89 2b       	or	r24, r25
  ce:	e1 f7       	brne	.-8      	; 0xc8 <main+0x22>
        {

        }
        tempature = temp_get();
  d0:	0e 94 d6 00 	call	0x1ac	; 0x1ac <temp_get>
  d4:	09 2e       	mov	r0, r25
  d6:	00 0c       	add	r0, r0
  d8:	aa 0b       	sbc	r26, r26
  da:	bb 0b       	sbc	r27, r27
  dc:	89 83       	std	Y+1, r24	; 0x01
  de:	9a 83       	std	Y+2, r25	; 0x02
  e0:	ab 83       	std	Y+3, r26	; 0x03
  e2:	bc 83       	std	Y+4, r27	; 0x04
        uart_writedec32(tempature);
  e4:	89 81       	ldd	r24, Y+1	; 0x01
  e6:	9a 81       	ldd	r25, Y+2	; 0x02
  e8:	ab 81       	ldd	r26, Y+3	; 0x03
  ea:	bc 81       	ldd	r27, Y+4	; 0x04
  ec:	bc 01       	movw	r22, r24
  ee:	cd 01       	movw	r24, r26
  f0:	0e 94 54 01 	call	0x2a8	; 0x2a8 <uart_writedec32>
        uart_writechar('\n');
  f4:	8a e0       	ldi	r24, 0x0A	; 10
  f6:	0e 94 24 01 	call	0x248	; 0x248 <uart_writechar>
        uart_writechar('\r');
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	0e 94 24 01 	call	0x248	; 0x248 <uart_writechar>
        delay(100);
 100:	84 e6       	ldi	r24, 0x64	; 100
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 3e 02 	call	0x47c	; 0x47c <delay>


    }
 108:	dc cf       	rjmp	.-72     	; 0xc2 <main+0x1c>

0000010a <temp_init>:
*   Changes the ADCSRA::ADEN to 1
*   Changes the ADCSRA::ADPS to 110
*
**********************************/
void temp_init()
{
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	cd b7       	in	r28, 0x3d	; 61
 110:	de b7       	in	r29, 0x3e	; 62

    ADCSRA |= (1<<ADEN);//Turns on the ADC
 112:	8a e7       	ldi	r24, 0x7A	; 122
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	2a e7       	ldi	r18, 0x7A	; 122
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	20 81       	ld	r18, Z
 11e:	20 68       	ori	r18, 0x80	; 128
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18
    ADCSRA |= (6<<ADPS);//Sets the prescalar to 64
 124:	8a e7       	ldi	r24, 0x7A	; 122
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	2a e7       	ldi	r18, 0x7A	; 122
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	f9 01       	movw	r30, r18
 12e:	20 81       	ld	r18, Z
 130:	26 60       	ori	r18, 0x06	; 6
 132:	fc 01       	movw	r30, r24
 134:	20 83       	st	Z, r18
    ADCMUX  |= (8<<MUX); //Sets the mux pin for tempature sensor
 136:	8c e7       	ldi	r24, 0x7C	; 124
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	2c e7       	ldi	r18, 0x7C	; 124
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	f9 01       	movw	r30, r18
 140:	20 81       	ld	r18, Z
 142:	28 60       	ori	r18, 0x08	; 8
 144:	fc 01       	movw	r30, r24
 146:	20 83       	st	Z, r18
    ADCMUX  |= (3<<REFS);// Sets volatge comparision to 1.1v
 148:	8c e7       	ldi	r24, 0x7C	; 124
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	2c e7       	ldi	r18, 0x7C	; 124
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	f9 01       	movw	r30, r18
 152:	20 81       	ld	r18, Z
 154:	20 6c       	ori	r18, 0xC0	; 192
 156:	fc 01       	movw	r30, r24
 158:	20 83       	st	Z, r18

}
 15a:	00 00       	nop
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <temp_is_data_read>:
*
* returns:
*   An int value of 1 meaning reading is still going 0 meaning read is done
**********************************/
int temp_is_data_read()
{
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	cd b7       	in	r28, 0x3d	; 61
 168:	de b7       	in	r29, 0x3e	; 62
    return ((ADCSRA>>ADSC)& 1);
 16a:	8a e7       	ldi	r24, 0x7A	; 122
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	fc 01       	movw	r30, r24
 170:	80 81       	ld	r24, Z
 172:	86 fb       	bst	r24, 6
 174:	88 0f       	add	r24, r24
 176:	88 0b       	sbc	r24, r24
 178:	80 f9       	bld	r24, 0
 17a:	08 2e       	mov	r0, r24
 17c:	00 0c       	add	r0, r0
 17e:	99 0b       	sbc	r25, r25
 180:	81 70       	andi	r24, 0x01	; 1
 182:	99 27       	eor	r25, r25

}
 184:	df 91       	pop	r29
 186:	cf 91       	pop	r28
 188:	08 95       	ret

0000018a <temp_start>:
*
* changes:
*   Changes the ADSC bit to 1 causing the
**********************************/
void temp_start()
{
 18a:	cf 93       	push	r28
 18c:	df 93       	push	r29
 18e:	cd b7       	in	r28, 0x3d	; 61
 190:	de b7       	in	r29, 0x3e	; 62
    ADCSRA |= (1<<ADSC);
 192:	8a e7       	ldi	r24, 0x7A	; 122
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	2a e7       	ldi	r18, 0x7A	; 122
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	f9 01       	movw	r30, r18
 19c:	20 81       	ld	r18, Z
 19e:	20 64       	ori	r18, 0x40	; 64
 1a0:	fc 01       	movw	r30, r24
 1a2:	20 83       	st	Z, r18
}
 1a4:	00 00       	nop
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	08 95       	ret

000001ac <temp_get>:
* returns:
*   A long int value
*
**********************************/
int temp_get()
{
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	00 d0       	rcall	.+0      	; 0x1b2 <temp_get+0x6>
 1b2:	00 d0       	rcall	.+0      	; 0x1b4 <temp_get+0x8>
 1b4:	cd b7       	in	r28, 0x3d	; 61
 1b6:	de b7       	in	r29, 0x3e	; 62
    long int reading = ADCL;
 1b8:	88 e7       	ldi	r24, 0x78	; 120
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	fc 01       	movw	r30, r24
 1be:	80 81       	ld	r24, Z
 1c0:	08 2e       	mov	r0, r24
 1c2:	00 0c       	add	r0, r0
 1c4:	99 0b       	sbc	r25, r25
 1c6:	aa 0b       	sbc	r26, r26
 1c8:	bb 0b       	sbc	r27, r27
 1ca:	89 83       	std	Y+1, r24	; 0x01
 1cc:	9a 83       	std	Y+2, r25	; 0x02
 1ce:	ab 83       	std	Y+3, r26	; 0x03
 1d0:	bc 83       	std	Y+4, r27	; 0x04

    reading |= (ADCH<<8);
 1d2:	89 e7       	ldi	r24, 0x79	; 121
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	fc 01       	movw	r30, r24
 1d8:	80 81       	ld	r24, Z
 1da:	08 2e       	mov	r0, r24
 1dc:	00 0c       	add	r0, r0
 1de:	99 0b       	sbc	r25, r25
 1e0:	98 2f       	mov	r25, r24
 1e2:	88 27       	eor	r24, r24
 1e4:	09 2e       	mov	r0, r25
 1e6:	00 0c       	add	r0, r0
 1e8:	aa 0b       	sbc	r26, r26
 1ea:	bb 0b       	sbc	r27, r27
 1ec:	29 81       	ldd	r18, Y+1	; 0x01
 1ee:	3a 81       	ldd	r19, Y+2	; 0x02
 1f0:	4b 81       	ldd	r20, Y+3	; 0x03
 1f2:	5c 81       	ldd	r21, Y+4	; 0x04
 1f4:	82 2b       	or	r24, r18
 1f6:	93 2b       	or	r25, r19
 1f8:	a4 2b       	or	r26, r20
 1fa:	b5 2b       	or	r27, r21
 1fc:	89 83       	std	Y+1, r24	; 0x01
 1fe:	9a 83       	std	Y+2, r25	; 0x02
 200:	ab 83       	std	Y+3, r26	; 0x03
 202:	bc 83       	std	Y+4, r27	; 0x04

    return ((reading*101)/101)-273;
 204:	29 81       	ldd	r18, Y+1	; 0x01
 206:	3a 81       	ldd	r19, Y+2	; 0x02
 208:	4b 81       	ldd	r20, Y+3	; 0x03
 20a:	5c 81       	ldd	r21, Y+4	; 0x04
 20c:	85 e6       	ldi	r24, 0x65	; 101
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	dc 01       	movw	r26, r24
 212:	0e 94 a4 04 	call	0x948	; 0x948 <__muluhisi3>
 216:	dc 01       	movw	r26, r24
 218:	cb 01       	movw	r24, r22
 21a:	25 e6       	ldi	r18, 0x65	; 101
 21c:	30 e0       	ldi	r19, 0x00	; 0
 21e:	40 e0       	ldi	r20, 0x00	; 0
 220:	50 e0       	ldi	r21, 0x00	; 0
 222:	bc 01       	movw	r22, r24
 224:	cd 01       	movw	r24, r26
 226:	0e 94 85 04 	call	0x90a	; 0x90a <__divmodsi4>
 22a:	da 01       	movw	r26, r20
 22c:	c9 01       	movw	r24, r18
 22e:	81 51       	subi	r24, 0x11	; 17
 230:	91 40       	sbci	r25, 0x01	; 1

}
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	08 95       	ret

00000240 <uart_init>:
 240:	0e 94 67 02 	call	0x4ce	; 0x4ce <serial_init>
 244:	78 94       	sei
 246:	08 95       	ret

00000248 <uart_writechar>:
 248:	0c 94 2b 04 	jmp	0x856	; 0x856 <serial_writechar>

0000024c <uart_writestr>:
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	ec 01       	movw	r28, r24
 252:	89 91       	ld	r24, Y+
 254:	88 23       	and	r24, r24
 256:	19 f0       	breq	.+6      	; 0x25e <uart_writestr+0x12>
 258:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 25c:	fa cf       	rjmp	.-12     	; 0x252 <uart_writestr+0x6>
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	08 95       	ret

00000264 <uart_writehex8>:
 264:	cf 93       	push	r28
 266:	c8 2f       	mov	r28, r24
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	24 e0       	ldi	r18, 0x04	; 4
 26c:	95 95       	asr	r25
 26e:	87 95       	ror	r24
 270:	2a 95       	dec	r18
 272:	e1 f7       	brne	.-8      	; 0x26c <uart_writehex8+0x8>
 274:	8a 30       	cpi	r24, 0x0A	; 10
 276:	10 f4       	brcc	.+4      	; 0x27c <uart_writehex8+0x18>
 278:	80 5d       	subi	r24, 0xD0	; 208
 27a:	01 c0       	rjmp	.+2      	; 0x27e <uart_writehex8+0x1a>
 27c:	89 5c       	subi	r24, 0xC9	; 201
 27e:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 282:	8c 2f       	mov	r24, r28
 284:	8f 70       	andi	r24, 0x0F	; 15
 286:	8a 30       	cpi	r24, 0x0A	; 10
 288:	10 f0       	brcs	.+4      	; 0x28e <uart_writehex8+0x2a>
 28a:	89 5c       	subi	r24, 0xC9	; 201
 28c:	01 c0       	rjmp	.+2      	; 0x290 <uart_writehex8+0x2c>
 28e:	80 5d       	subi	r24, 0xD0	; 208
 290:	cf 91       	pop	r28
 292:	0c 94 2b 04 	jmp	0x856	; 0x856 <serial_writechar>

00000296 <uart_writehex16>:
 296:	cf 93       	push	r28
 298:	c8 2f       	mov	r28, r24
 29a:	89 2f       	mov	r24, r25
 29c:	0e 94 32 01 	call	0x264	; 0x264 <uart_writehex8>
 2a0:	8c 2f       	mov	r24, r28
 2a2:	cf 91       	pop	r28
 2a4:	0c 94 32 01 	jmp	0x264	; 0x264 <uart_writehex8>

000002a8 <uart_writedec32>:
 2a8:	2f 92       	push	r2
 2aa:	3f 92       	push	r3
 2ac:	4f 92       	push	r4
 2ae:	5f 92       	push	r5
 2b0:	6f 92       	push	r6
 2b2:	7f 92       	push	r7
 2b4:	8f 92       	push	r8
 2b6:	9f 92       	push	r9
 2b8:	af 92       	push	r10
 2ba:	bf 92       	push	r11
 2bc:	cf 92       	push	r12
 2be:	df 92       	push	r13
 2c0:	ef 92       	push	r14
 2c2:	ff 92       	push	r15
 2c4:	0f 93       	push	r16
 2c6:	1f 93       	push	r17
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	63 97       	sbiw	r28, 0x13	; 19
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	6b 01       	movw	r12, r22
 2de:	7c 01       	movw	r14, r24
 2e0:	97 ff       	sbrs	r25, 7
 2e2:	0d c0       	rjmp	.+26     	; 0x2fe <uart_writedec32+0x56>
 2e4:	f0 94       	com	r15
 2e6:	e0 94       	com	r14
 2e8:	d0 94       	com	r13
 2ea:	c0 94       	com	r12
 2ec:	c1 1c       	adc	r12, r1
 2ee:	d1 1c       	adc	r13, r1
 2f0:	e1 1c       	adc	r14, r1
 2f2:	f1 1c       	adc	r15, r1
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	9b 8b       	std	Y+19, r25	; 0x13
 2fa:	8a 8b       	std	Y+18, r24	; 0x12
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <uart_writedec32+0x5a>
 2fe:	1b 8a       	std	Y+19, r1	; 0x13
 300:	1a 8a       	std	Y+18, r1	; 0x12
 302:	fe 01       	movw	r30, r28
 304:	31 96       	adiw	r30, 0x01	; 1
 306:	5f 01       	movw	r10, r30
 308:	8e 01       	movw	r16, r28
 30a:	05 5f       	subi	r16, 0xF5	; 245
 30c:	1f 4f       	sbci	r17, 0xFF	; 255
 30e:	f9 8b       	std	Y+17, r31	; 0x11
 310:	e8 8b       	std	Y+16, r30	; 0x10
 312:	66 24       	eor	r6, r6
 314:	63 94       	inc	r6
 316:	71 2c       	mov	r7, r1
 318:	81 2c       	mov	r8, r1
 31a:	91 2c       	mov	r9, r1
 31c:	aa e0       	ldi	r26, 0x0A	; 10
 31e:	b0 e0       	ldi	r27, 0x00	; 0
 320:	93 01       	movw	r18, r6
 322:	a4 01       	movw	r20, r8
 324:	0e 94 a4 04 	call	0x948	; 0x948 <__muluhisi3>
 328:	1b 01       	movw	r2, r22
 32a:	2c 01       	movw	r4, r24
 32c:	c7 01       	movw	r24, r14
 32e:	b6 01       	movw	r22, r12
 330:	91 01       	movw	r18, r2
 332:	a2 01       	movw	r20, r4
 334:	0e 94 85 04 	call	0x90a	; 0x90a <__divmodsi4>
 338:	93 01       	movw	r18, r6
 33a:	a4 01       	movw	r20, r8
 33c:	0e 94 85 04 	call	0x90a	; 0x90a <__divmodsi4>
 340:	e8 89       	ldd	r30, Y+16	; 0x10
 342:	f9 89       	ldd	r31, Y+17	; 0x11
 344:	21 93       	st	Z+, r18
 346:	f9 8b       	std	Y+17, r31	; 0x11
 348:	e8 8b       	std	Y+16, r30	; 0x10
 34a:	82 2f       	mov	r24, r18
 34c:	22 0f       	add	r18, r18
 34e:	99 0b       	sbc	r25, r25
 350:	aa 0b       	sbc	r26, r26
 352:	bb 0b       	sbc	r27, r27
 354:	c8 1a       	sub	r12, r24
 356:	d9 0a       	sbc	r13, r25
 358:	ea 0a       	sbc	r14, r26
 35a:	fb 0a       	sbc	r15, r27
 35c:	31 01       	movw	r6, r2
 35e:	42 01       	movw	r8, r4
 360:	0e 17       	cp	r16, r30
 362:	1f 07       	cpc	r17, r31
 364:	d9 f6       	brne	.-74     	; 0x31c <uart_writedec32+0x74>
 366:	8a 89       	ldd	r24, Y+18	; 0x12
 368:	9b 89       	ldd	r25, Y+19	; 0x13
 36a:	89 2b       	or	r24, r25
 36c:	19 f0       	breq	.+6      	; 0x374 <uart_writedec32+0xcc>
 36e:	8d e2       	ldi	r24, 0x2D	; 45
 370:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 374:	20 e0       	ldi	r18, 0x00	; 0
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	f8 01       	movw	r30, r16
 37a:	82 91       	ld	r24, -Z
 37c:	8f 01       	movw	r16, r30
 37e:	81 11       	cpse	r24, r1
 380:	06 c0       	rjmp	.+12     	; 0x38e <uart_writedec32+0xe6>
 382:	21 15       	cp	r18, r1
 384:	31 05       	cpc	r19, r1
 386:	19 f4       	brne	.+6      	; 0x38e <uart_writedec32+0xe6>
 388:	ea 15       	cp	r30, r10
 38a:	fb 05       	cpc	r31, r11
 38c:	29 f4       	brne	.+10     	; 0x398 <uart_writedec32+0xf0>
 38e:	80 5d       	subi	r24, 0xD0	; 208
 390:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 394:	21 e0       	ldi	r18, 0x01	; 1
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	0a 15       	cp	r16, r10
 39a:	1b 05       	cpc	r17, r11
 39c:	69 f7       	brne	.-38     	; 0x378 <uart_writedec32+0xd0>
 39e:	63 96       	adiw	r28, 0x13	; 19
 3a0:	0f b6       	in	r0, 0x3f	; 63
 3a2:	f8 94       	cli
 3a4:	de bf       	out	0x3e, r29	; 62
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	cd bf       	out	0x3d, r28	; 61
 3aa:	df 91       	pop	r29
 3ac:	cf 91       	pop	r28
 3ae:	1f 91       	pop	r17
 3b0:	0f 91       	pop	r16
 3b2:	ff 90       	pop	r15
 3b4:	ef 90       	pop	r14
 3b6:	df 90       	pop	r13
 3b8:	cf 90       	pop	r12
 3ba:	bf 90       	pop	r11
 3bc:	af 90       	pop	r10
 3be:	9f 90       	pop	r9
 3c0:	8f 90       	pop	r8
 3c2:	7f 90       	pop	r7
 3c4:	6f 90       	pop	r6
 3c6:	5f 90       	pop	r5
 3c8:	4f 90       	pop	r4
 3ca:	3f 90       	pop	r3
 3cc:	2f 90       	pop	r2
 3ce:	08 95       	ret

000003d0 <uart_is_connected>:
 3d0:	0c 94 01 04 	jmp	0x802	; 0x802 <serial_isconnected>

000003d4 <uart_is_packet_available>:
 3d4:	0c 94 28 04 	jmp	0x850	; 0x850 <serial_is_packet_ready>

000003d8 <uart_readpacket>:
 3d8:	ff 92       	push	r15
 3da:	0f 93       	push	r16
 3dc:	1f 93       	push	r17
 3de:	cf 93       	push	r28
 3e0:	df 93       	push	r29
 3e2:	ec 01       	movw	r28, r24
 3e4:	06 2f       	mov	r16, r22
 3e6:	f7 2e       	mov	r15, r23
 3e8:	18 82       	st	Y, r1
 3ea:	0e 94 01 04 	call	0x802	; 0x802 <serial_isconnected>
 3ee:	10 e0       	ldi	r17, 0x00	; 0
 3f0:	88 23       	and	r24, r24
 3f2:	d9 f0       	breq	.+54     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f4:	0e 94 d5 03 	call	0x7aa	; 0x7aa <serial_rxchars>
 3f8:	88 23       	and	r24, r24
 3fa:	b9 f0       	breq	.+46     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3fc:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <serial_popchar>
 400:	80 32       	cpi	r24, 0x20	; 32
 402:	10 f0       	brcs	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	89 93       	st	Y+, r24
 406:	1f 5f       	subi	r17, 0xFF	; 255
 408:	e0 2f       	mov	r30, r16
 40a:	ff 2d       	mov	r31, r15
 40c:	48 2f       	mov	r20, r24
 40e:	50 e0       	ldi	r21, 0x00	; 0
 410:	21 91       	ld	r18, Z+
 412:	22 23       	and	r18, r18
 414:	39 f0       	breq	.+14     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 416:	02 2e       	mov	r0, r18
 418:	00 0c       	add	r0, r0
 41a:	33 0b       	sbc	r19, r19
 41c:	42 17       	cp	r20, r18
 41e:	53 07       	cpc	r21, r19
 420:	b9 f7       	brne	.-18     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 422:	02 c0       	rjmp	.+4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 424:	8d 30       	cpi	r24, 0x0D	; 13
 426:	51 f7       	brne	.-44     	; 0x3fc <uart_readpacket+0x24>
 428:	18 82       	st	Y, r1
 42a:	81 2f       	mov	r24, r17
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	ff 90       	pop	r15
 436:	08 95       	ret

00000438 <uart_writeip>:
 438:	0f 93       	push	r16
 43a:	1f 93       	push	r17
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	8c 01       	movw	r16, r24
 442:	ec 01       	movw	r28, r24
 444:	69 91       	ld	r22, Y+
 446:	70 e0       	ldi	r23, 0x00	; 0
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 54 01 	call	0x2a8	; 0x2a8 <uart_writedec32>
 450:	0c 5f       	subi	r16, 0xFC	; 252
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	8e e2       	ldi	r24, 0x2E	; 46
 456:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 45a:	69 91       	ld	r22, Y+
 45c:	70 e0       	ldi	r23, 0x00	; 0
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	0e 94 54 01 	call	0x2a8	; 0x2a8 <uart_writedec32>
 466:	c0 17       	cp	r28, r16
 468:	d1 07       	cpc	r29, r17
 46a:	a1 f7       	brne	.-24     	; 0x454 <uart_writeip+0x1c>
 46c:	83 e2       	ldi	r24, 0x23	; 35
 46e:	91 e0       	ldi	r25, 0x01	; 1
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	1f 91       	pop	r17
 476:	0f 91       	pop	r16
 478:	0c 94 26 01 	jmp	0x24c	; 0x24c <uart_writestr>

0000047c <delay>:
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	00 d0       	rcall	.+0      	; 0x482 <delay+0x6>
 482:	00 d0       	rcall	.+0      	; 0x484 <delay+0x8>
 484:	cd b7       	in	r28, 0x3d	; 61
 486:	de b7       	in	r29, 0x3e	; 62
 488:	1c 82       	std	Y+4, r1	; 0x04
 48a:	1b 82       	std	Y+3, r1	; 0x03
 48c:	2b 81       	ldd	r18, Y+3	; 0x03
 48e:	3c 81       	ldd	r19, Y+4	; 0x04
 490:	28 17       	cp	r18, r24
 492:	39 07       	cpc	r19, r25
 494:	a8 f4       	brcc	.+42     	; 0x4c0 <delay+0x44>
 496:	1a 82       	std	Y+2, r1	; 0x02
 498:	19 82       	std	Y+1, r1	; 0x01
 49a:	29 81       	ldd	r18, Y+1	; 0x01
 49c:	3a 81       	ldd	r19, Y+2	; 0x02
 49e:	28 3e       	cpi	r18, 0xE8	; 232
 4a0:	33 40       	sbci	r19, 0x03	; 3
 4a2:	38 f4       	brcc	.+14     	; 0x4b2 <delay+0x36>
 4a4:	29 81       	ldd	r18, Y+1	; 0x01
 4a6:	3a 81       	ldd	r19, Y+2	; 0x02
 4a8:	2f 5f       	subi	r18, 0xFF	; 255
 4aa:	3f 4f       	sbci	r19, 0xFF	; 255
 4ac:	3a 83       	std	Y+2, r19	; 0x02
 4ae:	29 83       	std	Y+1, r18	; 0x01
 4b0:	f4 cf       	rjmp	.-24     	; 0x49a <delay+0x1e>
 4b2:	2b 81       	ldd	r18, Y+3	; 0x03
 4b4:	3c 81       	ldd	r19, Y+4	; 0x04
 4b6:	2f 5f       	subi	r18, 0xFF	; 255
 4b8:	3f 4f       	sbci	r19, 0xFF	; 255
 4ba:	3c 83       	std	Y+4, r19	; 0x04
 4bc:	2b 83       	std	Y+3, r18	; 0x03
 4be:	e6 cf       	rjmp	.-52     	; 0x48c <delay+0x10>
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	0f 90       	pop	r0
 4c8:	df 91       	pop	r29
 4ca:	cf 91       	pop	r28
 4cc:	08 95       	ret

000004ce <serial_init>:
 4ce:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 4d2:	87 e6       	ldi	r24, 0x67	; 103
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 4da:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 4de:	e1 ec       	ldi	r30, 0xC1	; 193
 4e0:	f0 e0       	ldi	r31, 0x00	; 0
 4e2:	88 e1       	ldi	r24, 0x18	; 24
 4e4:	80 83       	st	Z, r24
 4e6:	86 e0       	ldi	r24, 0x06	; 6
 4e8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 4ec:	80 81       	ld	r24, Z
 4ee:	80 6a       	ori	r24, 0xA0	; 160
 4f0:	80 83       	st	Z, r24
 4f2:	08 95       	ret

000004f4 <__vector_18>:
 4f4:	1f 92       	push	r1
 4f6:	0f 92       	push	r0
 4f8:	0f b6       	in	r0, 0x3f	; 63
 4fa:	0f 92       	push	r0
 4fc:	11 24       	eor	r1, r1
 4fe:	2f 93       	push	r18
 500:	3f 93       	push	r19
 502:	8f 93       	push	r24
 504:	9f 93       	push	r25
 506:	ef 93       	push	r30
 508:	ff 93       	push	r31
 50a:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <socket_mode>
 50e:	88 23       	and	r24, r24
 510:	09 f4       	brne	.+2      	; 0x514 <__vector_18+0x20>
 512:	f0 c0       	rjmp	.+480    	; 0x6f4 <__vector_18+0x200>
 514:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 518:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <socket_connected>
 51c:	99 23       	and	r25, r25
 51e:	09 f4       	brne	.+2      	; 0x522 <__vector_18+0x2e>
 520:	e3 c0       	rjmp	.+454    	; 0x6e8 <__vector_18+0x1f4>
 522:	90 ee       	ldi	r25, 0xE0	; 224
 524:	98 0f       	add	r25, r24
 526:	9f 35       	cpi	r25, 0x5F	; 95
 528:	18 f0       	brcs	.+6      	; 0x530 <__vector_18+0x3c>
 52a:	8d 30       	cpi	r24, 0x0D	; 13
 52c:	09 f0       	breq	.+2      	; 0x530 <__vector_18+0x3c>
 52e:	59 c0       	rjmp	.+178    	; 0x5e2 <__vector_18+0xee>
 530:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxtail>
 534:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <rxhead>
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	29 1b       	sub	r18, r25
 53c:	31 09       	sbc	r19, r1
 53e:	21 50       	subi	r18, 0x01	; 1
 540:	31 09       	sbc	r19, r1
 542:	2f 73       	andi	r18, 0x3F	; 63
 544:	33 27       	eor	r19, r19
 546:	23 2b       	or	r18, r19
 548:	61 f0       	breq	.+24     	; 0x562 <__vector_18+0x6e>
 54a:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 54e:	f0 e0       	ldi	r31, 0x00	; 0
 550:	e3 5d       	subi	r30, 0xD3	; 211
 552:	fe 4f       	sbci	r31, 0xFE	; 254
 554:	80 83       	st	Z, r24
 556:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <rxhead>
 55a:	9f 5f       	subi	r25, 0xFF	; 255
 55c:	9f 73       	andi	r25, 0x3F	; 63
 55e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <rxhead>
 562:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 566:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <txhead>
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	29 1b       	sub	r18, r25
 56e:	31 09       	sbc	r19, r1
 570:	21 50       	subi	r18, 0x01	; 1
 572:	31 09       	sbc	r19, r1
 574:	2f 73       	andi	r18, 0x3F	; 63
 576:	33 27       	eor	r19, r19
 578:	23 2b       	or	r18, r19
 57a:	89 f0       	breq	.+34     	; 0x59e <__vector_18+0xaa>
 57c:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <txhead>
 580:	f0 e0       	ldi	r31, 0x00	; 0
 582:	e3 59       	subi	r30, 0x93	; 147
 584:	fe 4f       	sbci	r31, 0xFE	; 254
 586:	80 83       	st	Z, r24
 588:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <txhead>
 58c:	9f 5f       	subi	r25, 0xFF	; 255
 58e:	9f 73       	andi	r25, 0x3F	; 63
 590:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <txhead>
 594:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 598:	90 62       	ori	r25, 0x20	; 32
 59a:	90 93 c1 00 	sts	0x00C1, r25	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 59e:	8d 30       	cpi	r24, 0x0D	; 13
 5a0:	09 f0       	breq	.+2      	; 0x5a4 <__vector_18+0xb0>
 5a2:	c5 c0       	rjmp	.+394    	; 0x72e <__vector_18+0x23a>
 5a4:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 5a8:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <txhead>
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	82 1b       	sub	r24, r18
 5b0:	91 09       	sbc	r25, r1
 5b2:	01 97       	sbiw	r24, 0x01	; 1
 5b4:	8f 73       	andi	r24, 0x3F	; 63
 5b6:	99 27       	eor	r25, r25
 5b8:	89 2b       	or	r24, r25
 5ba:	69 f0       	breq	.+26     	; 0x5d6 <__vector_18+0xe2>
 5bc:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <txhead>
 5c0:	f0 e0       	ldi	r31, 0x00	; 0
 5c2:	e3 59       	subi	r30, 0x93	; 147
 5c4:	fe 4f       	sbci	r31, 0xFE	; 254
 5c6:	8a e0       	ldi	r24, 0x0A	; 10
 5c8:	80 83       	st	Z, r24
 5ca:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <txhead>
 5ce:	8f 5f       	subi	r24, 0xFF	; 255
 5d0:	8f 73       	andi	r24, 0x3F	; 63
 5d2:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <txhead>
 5d6:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <packet_available>
 5da:	8f 5f       	subi	r24, 0xFF	; 255
 5dc:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <packet_available>
 5e0:	a6 c0       	rjmp	.+332    	; 0x72e <__vector_18+0x23a>
 5e2:	88 30       	cpi	r24, 0x08	; 8
 5e4:	11 f0       	breq	.+4      	; 0x5ea <__vector_18+0xf6>
 5e6:	8f 37       	cpi	r24, 0x7F	; 127
 5e8:	c1 f5       	brne	.+112    	; 0x65a <__vector_18+0x166>
 5ea:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 5ee:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxtail>
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	82 1b       	sub	r24, r18
 5f6:	91 09       	sbc	r25, r1
 5f8:	8f 73       	andi	r24, 0x3F	; 63
 5fa:	99 27       	eor	r25, r25
 5fc:	89 2b       	or	r24, r25
 5fe:	09 f4       	brne	.+2      	; 0x602 <__vector_18+0x10e>
 600:	96 c0       	rjmp	.+300    	; 0x72e <__vector_18+0x23a>
 602:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	e3 5d       	subi	r30, 0xD3	; 211
 60a:	fe 4f       	sbci	r31, 0xFE	; 254
 60c:	80 81       	ld	r24, Z
 60e:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 612:	81 50       	subi	r24, 0x01	; 1
 614:	8f 73       	andi	r24, 0x3F	; 63
 616:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <rxhead>
 61a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 61e:	20 91 27 01 	lds	r18, 0x0127	; 0x800127 <txhead>
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	82 1b       	sub	r24, r18
 626:	91 09       	sbc	r25, r1
 628:	01 97       	sbiw	r24, 0x01	; 1
 62a:	8f 73       	andi	r24, 0x3F	; 63
 62c:	99 27       	eor	r25, r25
 62e:	89 2b       	or	r24, r25
 630:	09 f4       	brne	.+2      	; 0x634 <__vector_18+0x140>
 632:	7d c0       	rjmp	.+250    	; 0x72e <__vector_18+0x23a>
 634:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <txhead>
 638:	f0 e0       	ldi	r31, 0x00	; 0
 63a:	e3 59       	subi	r30, 0x93	; 147
 63c:	fe 4f       	sbci	r31, 0xFE	; 254
 63e:	8f e7       	ldi	r24, 0x7F	; 127
 640:	80 83       	st	Z, r24
 642:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <txhead>
 646:	8f 5f       	subi	r24, 0xFF	; 255
 648:	8f 73       	andi	r24, 0x3F	; 63
 64a:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <txhead>
 64e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 652:	80 62       	ori	r24, 0x20	; 32
 654:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 658:	6a c0       	rjmp	.+212    	; 0x72e <__vector_18+0x23a>
 65a:	84 30       	cpi	r24, 0x04	; 4
 65c:	09 f0       	breq	.+2      	; 0x660 <__vector_18+0x16c>
 65e:	67 c0       	rjmp	.+206    	; 0x72e <__vector_18+0x23a>
 660:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 664:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxtail>
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	82 1b       	sub	r24, r18
 66c:	91 09       	sbc	r25, r1
 66e:	8f 73       	andi	r24, 0x3F	; 63
 670:	99 27       	eor	r25, r25
 672:	89 2b       	or	r24, r25
 674:	31 f1       	breq	.+76     	; 0x6c2 <__vector_18+0x1ce>
 676:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 67a:	f0 e0       	ldi	r31, 0x00	; 0
 67c:	e3 5d       	subi	r30, 0xD3	; 211
 67e:	fe 4f       	sbci	r31, 0xFE	; 254
 680:	80 81       	ld	r24, Z
 682:	8d 30       	cpi	r24, 0x0D	; 13
 684:	f1 f0       	breq	.+60     	; 0x6c2 <__vector_18+0x1ce>
 686:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <rxtail>
 68a:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <rxhead>
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	82 1b       	sub	r24, r18
 692:	91 09       	sbc	r25, r1
 694:	01 97       	sbiw	r24, 0x01	; 1
 696:	8f 73       	andi	r24, 0x3F	; 63
 698:	99 27       	eor	r25, r25
 69a:	89 2b       	or	r24, r25
 69c:	91 f0       	breq	.+36     	; 0x6c2 <__vector_18+0x1ce>
 69e:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	e3 5d       	subi	r30, 0xD3	; 211
 6a6:	fe 4f       	sbci	r31, 0xFE	; 254
 6a8:	8d e0       	ldi	r24, 0x0D	; 13
 6aa:	80 83       	st	Z, r24
 6ac:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 6b0:	8f 5f       	subi	r24, 0xFF	; 255
 6b2:	8f 73       	andi	r24, 0x3F	; 63
 6b4:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <rxhead>
 6b8:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <packet_available>
 6bc:	8f 5f       	subi	r24, 0xFF	; 255
 6be:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <packet_available>
 6c2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <rxtail>
 6c6:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <rxhead>
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	82 1b       	sub	r24, r18
 6ce:	91 09       	sbc	r25, r1
 6d0:	01 97       	sbiw	r24, 0x01	; 1
 6d2:	8f 73       	andi	r24, 0x3F	; 63
 6d4:	99 27       	eor	r25, r25
 6d6:	89 2b       	or	r24, r25
 6d8:	51 f1       	breq	.+84     	; 0x72e <__vector_18+0x23a>
 6da:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 6de:	f0 e0       	ldi	r31, 0x00	; 0
 6e0:	e3 5d       	subi	r30, 0xD3	; 211
 6e2:	fe 4f       	sbci	r31, 0xFE	; 254
 6e4:	84 e0       	ldi	r24, 0x04	; 4
 6e6:	19 c0       	rjmp	.+50     	; 0x71a <__vector_18+0x226>
 6e8:	83 30       	cpi	r24, 0x03	; 3
 6ea:	09 f5       	brne	.+66     	; 0x72e <__vector_18+0x23a>
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <socket_connected>
 6f2:	1d c0       	rjmp	.+58     	; 0x72e <__vector_18+0x23a>
 6f4:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <rxtail>
 6f8:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <rxhead>
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	82 1b       	sub	r24, r18
 700:	91 09       	sbc	r25, r1
 702:	01 97       	sbiw	r24, 0x01	; 1
 704:	8f 73       	andi	r24, 0x3F	; 63
 706:	99 27       	eor	r25, r25
 708:	89 2b       	or	r24, r25
 70a:	79 f0       	breq	.+30     	; 0x72a <__vector_18+0x236>
 70c:	e0 91 29 01 	lds	r30, 0x0129	; 0x800129 <rxhead>
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 716:	e3 5d       	subi	r30, 0xD3	; 211
 718:	fe 4f       	sbci	r31, 0xFE	; 254
 71a:	80 83       	st	Z, r24
 71c:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 720:	8f 5f       	subi	r24, 0xFF	; 255
 722:	8f 73       	andi	r24, 0x3F	; 63
 724:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <rxhead>
 728:	02 c0       	rjmp	.+4      	; 0x72e <__vector_18+0x23a>
 72a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 72e:	ff 91       	pop	r31
 730:	ef 91       	pop	r30
 732:	9f 91       	pop	r25
 734:	8f 91       	pop	r24
 736:	3f 91       	pop	r19
 738:	2f 91       	pop	r18
 73a:	0f 90       	pop	r0
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	0f 90       	pop	r0
 740:	1f 90       	pop	r1
 742:	18 95       	reti

00000744 <__vector_19>:
 744:	1f 92       	push	r1
 746:	0f 92       	push	r0
 748:	0f b6       	in	r0, 0x3f	; 63
 74a:	0f 92       	push	r0
 74c:	11 24       	eor	r1, r1
 74e:	2f 93       	push	r18
 750:	8f 93       	push	r24
 752:	9f 93       	push	r25
 754:	ef 93       	push	r30
 756:	ff 93       	push	r31
 758:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <txhead>
 75c:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 760:	90 e0       	ldi	r25, 0x00	; 0
 762:	82 1b       	sub	r24, r18
 764:	91 09       	sbc	r25, r1
 766:	8f 73       	andi	r24, 0x3F	; 63
 768:	99 27       	eor	r25, r25
 76a:	89 2b       	or	r24, r25
 76c:	79 f0       	breq	.+30     	; 0x78c <__vector_19+0x48>
 76e:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	e3 59       	subi	r30, 0x93	; 147
 776:	fe 4f       	sbci	r31, 0xFE	; 254
 778:	80 81       	ld	r24, Z
 77a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 77e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 782:	8f 5f       	subi	r24, 0xFF	; 255
 784:	8f 73       	andi	r24, 0x3F	; 63
 786:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 78a:	05 c0       	rjmp	.+10     	; 0x796 <__vector_19+0x52>
 78c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 790:	8f 7d       	andi	r24, 0xDF	; 223
 792:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 796:	ff 91       	pop	r31
 798:	ef 91       	pop	r30
 79a:	9f 91       	pop	r25
 79c:	8f 91       	pop	r24
 79e:	2f 91       	pop	r18
 7a0:	0f 90       	pop	r0
 7a2:	0f be       	out	0x3f, r0	; 63
 7a4:	0f 90       	pop	r0
 7a6:	1f 90       	pop	r1
 7a8:	18 95       	reti

000007aa <serial_rxchars>:
 7aa:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 7ae:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <rxtail>
 7b2:	89 1b       	sub	r24, r25
 7b4:	8f 73       	andi	r24, 0x3F	; 63
 7b6:	08 95       	ret

000007b8 <serial_popchar>:
 7b8:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 7bc:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxtail>
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	82 1b       	sub	r24, r18
 7c4:	91 09       	sbc	r25, r1
 7c6:	8f 73       	andi	r24, 0x3F	; 63
 7c8:	99 27       	eor	r25, r25
 7ca:	89 2b       	or	r24, r25
 7cc:	c1 f0       	breq	.+48     	; 0x7fe <serial_popchar+0x46>
 7ce:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <rxtail>
 7d2:	f0 e0       	ldi	r31, 0x00	; 0
 7d4:	e3 5d       	subi	r30, 0xD3	; 211
 7d6:	fe 4f       	sbci	r31, 0xFE	; 254
 7d8:	80 81       	ld	r24, Z
 7da:	90 91 28 01 	lds	r25, 0x0128	; 0x800128 <rxtail>
 7de:	9f 5f       	subi	r25, 0xFF	; 255
 7e0:	9f 73       	andi	r25, 0x3F	; 63
 7e2:	90 93 28 01 	sts	0x0128, r25	; 0x800128 <rxtail>
 7e6:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <socket_mode>
 7ea:	99 23       	and	r25, r25
 7ec:	49 f0       	breq	.+18     	; 0x800 <serial_popchar+0x48>
 7ee:	8d 30       	cpi	r24, 0x0D	; 13
 7f0:	39 f4       	brne	.+14     	; 0x800 <serial_popchar+0x48>
 7f2:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <packet_available>
 7f6:	91 50       	subi	r25, 0x01	; 1
 7f8:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <packet_available>
 7fc:	08 95       	ret
 7fe:	80 e0       	ldi	r24, 0x00	; 0
 800:	08 95       	ret

00000802 <serial_isconnected>:
 802:	81 e0       	ldi	r24, 0x01	; 1
 804:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <socket_mode>
 808:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <rxhead>
 80c:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <rxtail>
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	82 1b       	sub	r24, r18
 814:	91 09       	sbc	r25, r1
 816:	8f 73       	andi	r24, 0x3F	; 63
 818:	99 27       	eor	r25, r25
 81a:	89 2b       	or	r24, r25
 81c:	b1 f0       	breq	.+44     	; 0x84a <serial_isconnected+0x48>
 81e:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <rxtail>
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	e3 5d       	subi	r30, 0xD3	; 211
 826:	fe 4f       	sbci	r31, 0xFE	; 254
 828:	80 81       	ld	r24, Z
 82a:	84 30       	cpi	r24, 0x04	; 4
 82c:	71 f4       	brne	.+28     	; 0x84a <serial_isconnected+0x48>
 82e:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <socket_connected>
 832:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <rxtail>
 836:	f0 e0       	ldi	r31, 0x00	; 0
 838:	e3 5d       	subi	r30, 0xD3	; 211
 83a:	fe 4f       	sbci	r31, 0xFE	; 254
 83c:	80 81       	ld	r24, Z
 83e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <rxtail>
 842:	8f 5f       	subi	r24, 0xFF	; 255
 844:	8f 73       	andi	r24, 0x3F	; 63
 846:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <rxtail>
 84a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <socket_connected>
 84e:	08 95       	ret

00000850 <serial_is_packet_ready>:
 850:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <packet_available>
 854:	08 95       	ret

00000856 <serial_writechar>:
 856:	0f b6       	in	r0, 0x3f	; 63
 858:	07 fe       	sbrs	r0, 7
 85a:	0e c0       	rjmp	.+28     	; 0x878 <serial_writechar+0x22>
 85c:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 860:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <txhead>
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	29 1b       	sub	r18, r25
 868:	31 09       	sbc	r19, r1
 86a:	21 50       	subi	r18, 0x01	; 1
 86c:	31 09       	sbc	r19, r1
 86e:	2f 73       	andi	r18, 0x3F	; 63
 870:	33 27       	eor	r19, r19
 872:	23 2b       	or	r18, r19
 874:	99 f3       	breq	.-26     	; 0x85c <serial_writechar+0x6>
 876:	0d c0       	rjmp	.+26     	; 0x892 <serial_writechar+0x3c>
 878:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <__data_end>
 87c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <txhead>
 880:	30 e0       	ldi	r19, 0x00	; 0
 882:	29 1b       	sub	r18, r25
 884:	31 09       	sbc	r19, r1
 886:	21 50       	subi	r18, 0x01	; 1
 888:	31 09       	sbc	r19, r1
 88a:	2f 73       	andi	r18, 0x3F	; 63
 88c:	33 27       	eor	r19, r19
 88e:	23 2b       	or	r18, r19
 890:	61 f0       	breq	.+24     	; 0x8aa <serial_writechar+0x54>
 892:	e0 91 27 01 	lds	r30, 0x0127	; 0x800127 <txhead>
 896:	f0 e0       	ldi	r31, 0x00	; 0
 898:	e3 59       	subi	r30, 0x93	; 147
 89a:	fe 4f       	sbci	r31, 0xFE	; 254
 89c:	80 83       	st	Z, r24
 89e:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <txhead>
 8a2:	8f 5f       	subi	r24, 0xFF	; 255
 8a4:	8f 73       	andi	r24, 0x3F	; 63
 8a6:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <txhead>
 8aa:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 8ae:	80 62       	ori	r24, 0x20	; 32
 8b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 8b4:	08 95       	ret

000008b6 <serial_writestr>:
 8b6:	1f 93       	push	r17
 8b8:	cf 93       	push	r28
 8ba:	df 93       	push	r29
 8bc:	ec 01       	movw	r28, r24
 8be:	80 e0       	ldi	r24, 0x00	; 0
 8c0:	11 e0       	ldi	r17, 0x01	; 1
 8c2:	18 0f       	add	r17, r24
 8c4:	fe 01       	movw	r30, r28
 8c6:	e8 0f       	add	r30, r24
 8c8:	f1 1d       	adc	r31, r1
 8ca:	80 81       	ld	r24, Z
 8cc:	88 23       	and	r24, r24
 8ce:	21 f0       	breq	.+8      	; 0x8d8 <serial_writestr+0x22>
 8d0:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 8d4:	81 2f       	mov	r24, r17
 8d6:	f4 cf       	rjmp	.-24     	; 0x8c0 <serial_writestr+0xa>
 8d8:	df 91       	pop	r29
 8da:	cf 91       	pop	r28
 8dc:	1f 91       	pop	r17
 8de:	08 95       	ret

000008e0 <serial_writestr_P>:
 8e0:	1f 93       	push	r17
 8e2:	cf 93       	push	r28
 8e4:	df 93       	push	r29
 8e6:	ec 01       	movw	r28, r24
 8e8:	80 e0       	ldi	r24, 0x00	; 0
 8ea:	11 e0       	ldi	r17, 0x01	; 1
 8ec:	18 0f       	add	r17, r24
 8ee:	fe 01       	movw	r30, r28
 8f0:	e8 0f       	add	r30, r24
 8f2:	f1 1d       	adc	r31, r1
 8f4:	84 91       	lpm	r24, Z
 8f6:	88 23       	and	r24, r24
 8f8:	21 f0       	breq	.+8      	; 0x902 <__stack+0x3>
 8fa:	0e 94 2b 04 	call	0x856	; 0x856 <serial_writechar>
 8fe:	81 2f       	mov	r24, r17
 900:	f4 cf       	rjmp	.-24     	; 0x8ea <serial_writestr_P+0xa>
 902:	df 91       	pop	r29
 904:	cf 91       	pop	r28
 906:	1f 91       	pop	r17
 908:	08 95       	ret

0000090a <__divmodsi4>:
 90a:	05 2e       	mov	r0, r21
 90c:	97 fb       	bst	r25, 7
 90e:	1e f4       	brtc	.+6      	; 0x916 <__divmodsi4+0xc>
 910:	00 94       	com	r0
 912:	0e 94 9c 04 	call	0x938	; 0x938 <__negsi2>
 916:	57 fd       	sbrc	r21, 7
 918:	07 d0       	rcall	.+14     	; 0x928 <__divmodsi4_neg2>
 91a:	0e 94 af 04 	call	0x95e	; 0x95e <__udivmodsi4>
 91e:	07 fc       	sbrc	r0, 7
 920:	03 d0       	rcall	.+6      	; 0x928 <__divmodsi4_neg2>
 922:	4e f4       	brtc	.+18     	; 0x936 <__divmodsi4_exit>
 924:	0c 94 9c 04 	jmp	0x938	; 0x938 <__negsi2>

00000928 <__divmodsi4_neg2>:
 928:	50 95       	com	r21
 92a:	40 95       	com	r20
 92c:	30 95       	com	r19
 92e:	21 95       	neg	r18
 930:	3f 4f       	sbci	r19, 0xFF	; 255
 932:	4f 4f       	sbci	r20, 0xFF	; 255
 934:	5f 4f       	sbci	r21, 0xFF	; 255

00000936 <__divmodsi4_exit>:
 936:	08 95       	ret

00000938 <__negsi2>:
 938:	90 95       	com	r25
 93a:	80 95       	com	r24
 93c:	70 95       	com	r23
 93e:	61 95       	neg	r22
 940:	7f 4f       	sbci	r23, 0xFF	; 255
 942:	8f 4f       	sbci	r24, 0xFF	; 255
 944:	9f 4f       	sbci	r25, 0xFF	; 255
 946:	08 95       	ret

00000948 <__muluhisi3>:
 948:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__umulhisi3>
 94c:	a5 9f       	mul	r26, r21
 94e:	90 0d       	add	r25, r0
 950:	b4 9f       	mul	r27, r20
 952:	90 0d       	add	r25, r0
 954:	a4 9f       	mul	r26, r20
 956:	80 0d       	add	r24, r0
 958:	91 1d       	adc	r25, r1
 95a:	11 24       	eor	r1, r1
 95c:	08 95       	ret

0000095e <__udivmodsi4>:
 95e:	a1 e2       	ldi	r26, 0x21	; 33
 960:	1a 2e       	mov	r1, r26
 962:	aa 1b       	sub	r26, r26
 964:	bb 1b       	sub	r27, r27
 966:	fd 01       	movw	r30, r26
 968:	0d c0       	rjmp	.+26     	; 0x984 <__udivmodsi4_ep>

0000096a <__udivmodsi4_loop>:
 96a:	aa 1f       	adc	r26, r26
 96c:	bb 1f       	adc	r27, r27
 96e:	ee 1f       	adc	r30, r30
 970:	ff 1f       	adc	r31, r31
 972:	a2 17       	cp	r26, r18
 974:	b3 07       	cpc	r27, r19
 976:	e4 07       	cpc	r30, r20
 978:	f5 07       	cpc	r31, r21
 97a:	20 f0       	brcs	.+8      	; 0x984 <__udivmodsi4_ep>
 97c:	a2 1b       	sub	r26, r18
 97e:	b3 0b       	sbc	r27, r19
 980:	e4 0b       	sbc	r30, r20
 982:	f5 0b       	sbc	r31, r21

00000984 <__udivmodsi4_ep>:
 984:	66 1f       	adc	r22, r22
 986:	77 1f       	adc	r23, r23
 988:	88 1f       	adc	r24, r24
 98a:	99 1f       	adc	r25, r25
 98c:	1a 94       	dec	r1
 98e:	69 f7       	brne	.-38     	; 0x96a <__udivmodsi4_loop>
 990:	60 95       	com	r22
 992:	70 95       	com	r23
 994:	80 95       	com	r24
 996:	90 95       	com	r25
 998:	9b 01       	movw	r18, r22
 99a:	ac 01       	movw	r20, r24
 99c:	bd 01       	movw	r22, r26
 99e:	cf 01       	movw	r24, r30
 9a0:	08 95       	ret

000009a2 <__umulhisi3>:
 9a2:	a2 9f       	mul	r26, r18
 9a4:	b0 01       	movw	r22, r0
 9a6:	b3 9f       	mul	r27, r19
 9a8:	c0 01       	movw	r24, r0
 9aa:	a3 9f       	mul	r26, r19
 9ac:	70 0d       	add	r23, r0
 9ae:	81 1d       	adc	r24, r1
 9b0:	11 24       	eor	r1, r1
 9b2:	91 1d       	adc	r25, r1
 9b4:	b2 9f       	mul	r27, r18
 9b6:	70 0d       	add	r23, r0
 9b8:	81 1d       	adc	r24, r1
 9ba:	11 24       	eor	r1, r1
 9bc:	91 1d       	adc	r25, r1
 9be:	08 95       	ret

000009c0 <_exit>:
 9c0:	f8 94       	cli

000009c2 <__stop_program>:
 9c2:	ff cf       	rjmp	.-2      	; 0x9c2 <__stop_program>
