
bin/Debug/homework_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  000011c6  0000125a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000119e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .siminfo      00000028  0000119e  0000119e  00001232  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .bss          0000009a  0080017a  0080017a  000012d4  2**0
                  ALLOC
  4 .stab         00001884  00000000  00000000  000012d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      0000149c  00000000  00000000  00002b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .comment      00000011  00000000  00000000  00003ff4  2**0
                  CONTENTS, READONLY
  7 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004008  2**2
                  CONTENTS, READONLY
  8 .debug_info   000005f4  00000000  00000000  00004048  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000005a2  00000000  00000000  0000463c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000001a  00000000  00000000  00004bde  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000208  00000000  00000000  00004bf8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 f9 02 	jmp	0x5f2	; 0x5f2 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 6f 07 	jmp	0xede	; 0xede <__vector_18>
      4c:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <__vector_19>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 ec       	ldi	r30, 0xC6	; 198
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 37       	cpi	r26, 0x7A	; 122
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	aa e7       	ldi	r26, 0x7A	; 122
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a4 31       	cpi	r26, 0x14	; 20
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 3a 02 	call	0x474	; 0x474 <main>
      9e:	0c 94 cd 08 	jmp	0x119a	; 0x119a <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <delay_init>:
*   Sets prescaler to 64 with a compare of 249
*   Initilaizes the count and limit arrays
*   creates a static variable initialized
**********************************/
void delay_init()
{
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29
      aa:	cd b7       	in	r28, 0x3d	; 61
      ac:	de b7       	in	r29, 0x3e	; 62
    TCCR0A |= ((1<<7) | (1<<6)); //Sets the OCR0A on compare match
      ae:	84 e4       	ldi	r24, 0x44	; 68
      b0:	90 e0       	ldi	r25, 0x00	; 0
      b2:	24 e4       	ldi	r18, 0x44	; 68
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	f9 01       	movw	r30, r18
      b8:	20 81       	ld	r18, Z
      ba:	20 6c       	ori	r18, 0xC0	; 192
      bc:	fc 01       	movw	r30, r24
      be:	20 83       	st	Z, r18
    TCCR0A |= ((1<<1)); //Sets to CTC mode
      c0:	84 e4       	ldi	r24, 0x44	; 68
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	24 e4       	ldi	r18, 0x44	; 68
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	f9 01       	movw	r30, r18
      ca:	20 81       	ld	r18, Z
      cc:	22 60       	ori	r18, 0x02	; 2
      ce:	fc 01       	movw	r30, r24
      d0:	20 83       	st	Z, r18


    //Sets interrupt rate to 1 milli second
    TCCR0B |= ((1<<1) | (1<<0));//Sets prescaller to 64
      d2:	85 e4       	ldi	r24, 0x45	; 69
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	25 e4       	ldi	r18, 0x45	; 69
      d8:	30 e0       	ldi	r19, 0x00	; 0
      da:	f9 01       	movw	r30, r18
      dc:	20 81       	ld	r18, Z
      de:	23 60       	ori	r18, 0x03	; 3
      e0:	fc 01       	movw	r30, r24
      e2:	20 83       	st	Z, r18
    OCR0A |= 249; //Sets compare rate to 249
      e4:	84 e4       	ldi	r24, 0x44	; 68
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	24 e4       	ldi	r18, 0x44	; 68
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	29 6f       	ori	r18, 0xF9	; 249
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18


    TIMSK0 |= (1<<1); //Sets the interrupt for OCR0A
      f6:	8e e6       	ldi	r24, 0x6E	; 110
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	2e e6       	ldi	r18, 0x6E	; 110
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	f9 01       	movw	r30, r18
     100:	20 81       	ld	r18, Z
     102:	22 60       	ori	r18, 0x02	; 2
     104:	fc 01       	movw	r30, r24
     106:	20 83       	st	Z, r18



    initialized = 1;
     108:	81 e0       	ldi	r24, 0x01	; 1
     10a:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
    limit[0] = 0;
     10e:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <limit+0x1>
     112:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <limit>
    limit[1] = 0;
     116:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <limit+0x3>
     11a:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <limit+0x2>
    count[0] = 0;
     11e:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <count+0x1>
     122:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <count>
    count[1] = 1;
     126:	81 e0       	ldi	r24, 0x01	; 1
     128:	90 e0       	ldi	r25, 0x00	; 0
     12a:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <count+0x3>
     12e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <count+0x2>

}
     132:	00 00       	nop
     134:	df 91       	pop	r29
     136:	cf 91       	pop	r28
     138:	08 95       	ret

0000013a <delay_get>:
*
* Changes:
*   None
**********************************/
unsigned int delay_get(unsigned int num)
{
     13a:	cf 93       	push	r28
     13c:	df 93       	push	r29
     13e:	00 d0       	rcall	.+0      	; 0x140 <delay_get+0x6>
     140:	00 d0       	rcall	.+0      	; 0x142 <delay_get+0x8>
     142:	00 d0       	rcall	.+0      	; 0x144 <delay_get+0xa>
     144:	cd b7       	in	r28, 0x3d	; 61
     146:	de b7       	in	r29, 0x3e	; 62
     148:	9e 83       	std	Y+6, r25	; 0x06
     14a:	8d 83       	std	Y+5, r24	; 0x05
    unsigned int bitState = SREG;
     14c:	8f e5       	ldi	r24, 0x5F	; 95
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	fc 01       	movw	r30, r24
     152:	80 81       	ld	r24, Z
     154:	08 2e       	mov	r0, r24
     156:	00 0c       	add	r0, r0
     158:	99 0b       	sbc	r25, r25
     15a:	9a 83       	std	Y+2, r25	; 0x02
     15c:	89 83       	std	Y+1, r24	; 0x01
    __builtin_avr_cli(); //Turn off interrupts
     15e:	f8 94       	cli
    //Atomic interaction is active
     unsigned int countValue = count[num];
     160:	8d 81       	ldd	r24, Y+5	; 0x05
     162:	9e 81       	ldd	r25, Y+6	; 0x06
     164:	88 0f       	add	r24, r24
     166:	99 1f       	adc	r25, r25
     168:	8d 57       	subi	r24, 0x7D	; 125
     16a:	9e 4f       	sbci	r25, 0xFE	; 254
     16c:	fc 01       	movw	r30, r24
     16e:	80 81       	ld	r24, Z
     170:	91 81       	ldd	r25, Z+1	; 0x01
     172:	9c 83       	std	Y+4, r25	; 0x04
     174:	8b 83       	std	Y+3, r24	; 0x03
     SREG = bitState;
     176:	8f e5       	ldi	r24, 0x5F	; 95
     178:	90 e0       	ldi	r25, 0x00	; 0
     17a:	29 81       	ldd	r18, Y+1	; 0x01
     17c:	fc 01       	movw	r30, r24
     17e:	20 83       	st	Z, r18
     //Atomic off
     return countValue;
     180:	8b 81       	ldd	r24, Y+3	; 0x03
     182:	9c 81       	ldd	r25, Y+4	; 0x04
}
     184:	26 96       	adiw	r28, 0x06	; 6
     186:	0f b6       	in	r0, 0x3f	; 63
     188:	f8 94       	cli
     18a:	de bf       	out	0x3e, r29	; 62
     18c:	0f be       	out	0x3f, r0	; 63
     18e:	cd bf       	out	0x3d, r28	; 61
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <delay_set>:
*
* Changes:
*   None
**********************************/
void delay_set(unsigned int num, unsigned int msec)
{
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	00 d0       	rcall	.+0      	; 0x19c <delay_set+0x6>
     19c:	00 d0       	rcall	.+0      	; 0x19e <delay_set+0x8>
     19e:	00 d0       	rcall	.+0      	; 0x1a0 <delay_set+0xa>
     1a0:	cd b7       	in	r28, 0x3d	; 61
     1a2:	de b7       	in	r29, 0x3e	; 62
     1a4:	9c 83       	std	Y+4, r25	; 0x04
     1a6:	8b 83       	std	Y+3, r24	; 0x03
     1a8:	7e 83       	std	Y+6, r23	; 0x06
     1aa:	6d 83       	std	Y+5, r22	; 0x05

    if(initialized == 0)
     1ac:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
     1b0:	88 23       	and	r24, r24
     1b2:	11 f4       	brne	.+4      	; 0x1b8 <delay_set+0x22>
    {
        delay_init();
     1b4:	0e 94 53 00 	call	0xa6	; 0xa6 <delay_init>
    }

    unsigned int bitState = 0 | SREG; //Save SREG state
     1b8:	8f e5       	ldi	r24, 0x5F	; 95
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	fc 01       	movw	r30, r24
     1be:	80 81       	ld	r24, Z
     1c0:	08 2e       	mov	r0, r24
     1c2:	00 0c       	add	r0, r0
     1c4:	99 0b       	sbc	r25, r25
     1c6:	9a 83       	std	Y+2, r25	; 0x02
     1c8:	89 83       	std	Y+1, r24	; 0x01
    __builtin_avr_cli(); //Turn off interrupts
     1ca:	f8 94       	cli
    //We are now atomic at this point
    limit[num] = msec;
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	88 0f       	add	r24, r24
     1d2:	99 1f       	adc	r25, r25
     1d4:	81 58       	subi	r24, 0x81	; 129
     1d6:	9e 4f       	sbci	r25, 0xFE	; 254
     1d8:	2d 81       	ldd	r18, Y+5	; 0x05
     1da:	3e 81       	ldd	r19, Y+6	; 0x06
     1dc:	fc 01       	movw	r30, r24
     1de:	31 83       	std	Z+1, r19	; 0x01
     1e0:	20 83       	st	Z, r18
    count[num] = 0;
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	9c 81       	ldd	r25, Y+4	; 0x04
     1e6:	88 0f       	add	r24, r24
     1e8:	99 1f       	adc	r25, r25
     1ea:	8d 57       	subi	r24, 0x7D	; 125
     1ec:	9e 4f       	sbci	r25, 0xFE	; 254
     1ee:	fc 01       	movw	r30, r24
     1f0:	11 82       	std	Z+1, r1	; 0x01
     1f2:	10 82       	st	Z, r1
    SREG = bitState;
     1f4:	8f e5       	ldi	r24, 0x5F	; 95
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	29 81       	ldd	r18, Y+1	; 0x01
     1fa:	fc 01       	movw	r30, r24
     1fc:	20 83       	st	Z, r18
    //Atomic is no longer active
}
     1fe:	00 00       	nop
     200:	26 96       	adiw	r28, 0x06	; 6
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	f8 94       	cli
     206:	de bf       	out	0x3e, r29	; 62
     208:	0f be       	out	0x3f, r0	; 63
     20a:	cd bf       	out	0x3d, r28	; 61
     20c:	df 91       	pop	r29
     20e:	cf 91       	pop	r28
     210:	08 95       	ret

00000212 <delay_isdone>:
*
* Changes:
*   None
**********************************/
unsigned int delay_isdone(unsigned int num)
{
     212:	cf 93       	push	r28
     214:	df 93       	push	r29
     216:	00 d0       	rcall	.+0      	; 0x218 <delay_isdone+0x6>
     218:	00 d0       	rcall	.+0      	; 0x21a <delay_isdone+0x8>
     21a:	cd b7       	in	r28, 0x3d	; 61
     21c:	de b7       	in	r29, 0x3e	; 62
     21e:	9c 83       	std	Y+4, r25	; 0x04
     220:	8b 83       	std	Y+3, r24	; 0x03
    unsigned int result = 0;
     222:	1a 82       	std	Y+2, r1	; 0x02
     224:	19 82       	std	Y+1, r1	; 0x01

    if(count[num] == limit[num])
     226:	8b 81       	ldd	r24, Y+3	; 0x03
     228:	9c 81       	ldd	r25, Y+4	; 0x04
     22a:	88 0f       	add	r24, r24
     22c:	99 1f       	adc	r25, r25
     22e:	8d 57       	subi	r24, 0x7D	; 125
     230:	9e 4f       	sbci	r25, 0xFE	; 254
     232:	fc 01       	movw	r30, r24
     234:	20 81       	ld	r18, Z
     236:	31 81       	ldd	r19, Z+1	; 0x01
     238:	8b 81       	ldd	r24, Y+3	; 0x03
     23a:	9c 81       	ldd	r25, Y+4	; 0x04
     23c:	88 0f       	add	r24, r24
     23e:	99 1f       	adc	r25, r25
     240:	81 58       	subi	r24, 0x81	; 129
     242:	9e 4f       	sbci	r25, 0xFE	; 254
     244:	fc 01       	movw	r30, r24
     246:	80 81       	ld	r24, Z
     248:	91 81       	ldd	r25, Z+1	; 0x01
     24a:	28 17       	cp	r18, r24
     24c:	39 07       	cpc	r19, r25
     24e:	21 f4       	brne	.+8      	; 0x258 <delay_isdone+0x46>
    {
        result = 1;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	9a 83       	std	Y+2, r25	; 0x02
     256:	89 83       	std	Y+1, r24	; 0x01
    }
    return result;
     258:	89 81       	ldd	r24, Y+1	; 0x01
     25a:	9a 81       	ldd	r25, Y+2	; 0x02

}
     25c:	0f 90       	pop	r0
     25e:	0f 90       	pop	r0
     260:	0f 90       	pop	r0
     262:	0f 90       	pop	r0
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	08 95       	ret

0000026a <__vector_14>:
* Changes:
*   None
**********************************/
void __vector_14(void) __attribute__ ((signal,used, externally_visible));
void __vector_14(void)
{
     26a:	1f 92       	push	r1
     26c:	0f 92       	push	r0
     26e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     272:	0f 92       	push	r0
     274:	11 24       	eor	r1, r1
     276:	2f 93       	push	r18
     278:	3f 93       	push	r19
     27a:	4f 93       	push	r20
     27c:	5f 93       	push	r21
     27e:	6f 93       	push	r22
     280:	7f 93       	push	r23
     282:	8f 93       	push	r24
     284:	9f 93       	push	r25
     286:	af 93       	push	r26
     288:	bf 93       	push	r27
     28a:	ef 93       	push	r30
     28c:	ff 93       	push	r31
     28e:	cf 93       	push	r28
     290:	df 93       	push	r29
     292:	cd b7       	in	r28, 0x3d	; 61
     294:	de b7       	in	r29, 0x3e	; 62
    if(!delay_isdone(0))
     296:	80 e0       	ldi	r24, 0x00	; 0
     298:	90 e0       	ldi	r25, 0x00	; 0
     29a:	0e 94 09 01 	call	0x212	; 0x212 <delay_isdone>
     29e:	89 2b       	or	r24, r25
     2a0:	49 f4       	brne	.+18     	; 0x2b4 <__vector_14+0x4a>
    {
        count[0] += 1;
     2a2:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <count>
     2a6:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <count+0x1>
     2aa:	01 96       	adiw	r24, 0x01	; 1
     2ac:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <count+0x1>
     2b0:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <count>
    }
    if(!delay_isdone(1))
     2b4:	81 e0       	ldi	r24, 0x01	; 1
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 09 01 	call	0x212	; 0x212 <delay_isdone>
     2bc:	89 2b       	or	r24, r25
     2be:	49 f4       	brne	.+18     	; 0x2d2 <__vector_14+0x68>
    {
        count[1] +=1;
     2c0:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <count+0x2>
     2c4:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <count+0x3>
     2c8:	01 96       	adiw	r24, 0x01	; 1
     2ca:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <count+0x3>
     2ce:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <count+0x2>
    }

}
     2d2:	00 00       	nop
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	ff 91       	pop	r31
     2da:	ef 91       	pop	r30
     2dc:	bf 91       	pop	r27
     2de:	af 91       	pop	r26
     2e0:	9f 91       	pop	r25
     2e2:	8f 91       	pop	r24
     2e4:	7f 91       	pop	r23
     2e6:	6f 91       	pop	r22
     2e8:	5f 91       	pop	r21
     2ea:	4f 91       	pop	r20
     2ec:	3f 91       	pop	r19
     2ee:	2f 91       	pop	r18
     2f0:	0f 90       	pop	r0
     2f2:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     2f6:	0f 90       	pop	r0
     2f8:	1f 90       	pop	r1
     2fa:	18 95       	reti

000002fc <state_1>:
volatile char * blink_msg;
unsigned int blink_pos;
unsigned char blink_state;

void state_1()
{
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	00 d0       	rcall	.+0      	; 0x302 <state_1+0x6>
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
    unsigned int delay;

    switch(blink_msg[blink_pos])
     306:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <blink_msg>
     30a:	30 91 8b 01 	lds	r19, 0x018B	; 0x80018b <blink_msg+0x1>
     30e:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <blink_pos>
     312:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <blink_pos+0x1>
     316:	82 0f       	add	r24, r18
     318:	93 1f       	adc	r25, r19
     31a:	fc 01       	movw	r30, r24
     31c:	80 81       	ld	r24, Z
     31e:	08 2e       	mov	r0, r24
     320:	00 0c       	add	r0, r0
     322:	99 0b       	sbc	r25, r25
     324:	8d 32       	cpi	r24, 0x2D	; 45
     326:	91 05       	cpc	r25, r1
     328:	61 f0       	breq	.+24     	; 0x342 <state_1+0x46>
     32a:	8e 32       	cpi	r24, 0x2E	; 46
     32c:	91 05       	cpc	r25, r1
     32e:	99 f0       	breq	.+38     	; 0x356 <state_1+0x5a>
     330:	80 97       	sbiw	r24, 0x20	; 32
     332:	d9 f4       	brne	.+54     	; 0x36a <state_1+0x6e>
    {

        case ' ' :
            delay = 1000;
     334:	88 ee       	ldi	r24, 0xE8	; 232
     336:	93 e0       	ldi	r25, 0x03	; 3
     338:	9a 83       	std	Y+2, r25	; 0x02
     33a:	89 83       	std	Y+1, r24	; 0x01
            led_off();
     33c:	0e 94 2c 03 	call	0x658	; 0x658 <led_off>
            break;
     340:	1c c0       	rjmp	.+56     	; 0x37a <state_1+0x7e>

        case '-' :
            blink_state = '2';
     342:	82 e3       	ldi	r24, 0x32	; 50
     344:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <blink_state>
            delay = 750;
     348:	8e ee       	ldi	r24, 0xEE	; 238
     34a:	92 e0       	ldi	r25, 0x02	; 2
     34c:	9a 83       	std	Y+2, r25	; 0x02
     34e:	89 83       	std	Y+1, r24	; 0x01
            led_on();
     350:	0e 94 2a 03 	call	0x654	; 0x654 <led_on>
            break;
     354:	12 c0       	rjmp	.+36     	; 0x37a <state_1+0x7e>

        case '.' :
            blink_state = '2';
     356:	82 e3       	ldi	r24, 0x32	; 50
     358:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <blink_state>
            delay = 250;
     35c:	8a ef       	ldi	r24, 0xFA	; 250
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	9a 83       	std	Y+2, r25	; 0x02
     362:	89 83       	std	Y+1, r24	; 0x01
            led_on();
     364:	0e 94 2a 03 	call	0x654	; 0x654 <led_on>
            break;
     368:	08 c0       	rjmp	.+16     	; 0x37a <state_1+0x7e>

        default :
            blink_state = '2';
     36a:	82 e3       	ldi	r24, 0x32	; 50
     36c:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <blink_state>
            delay = 0;
     370:	1a 82       	std	Y+2, r1	; 0x02
     372:	19 82       	std	Y+1, r1	; 0x01
            led_off();
     374:	0e 94 2c 03 	call	0x658	; 0x658 <led_off>
            break;
     378:	00 00       	nop
    }
    delay_set(0 , delay);
     37a:	89 81       	ldd	r24, Y+1	; 0x01
     37c:	9a 81       	ldd	r25, Y+2	; 0x02
     37e:	bc 01       	movw	r22, r24
     380:	80 e0       	ldi	r24, 0x00	; 0
     382:	90 e0       	ldi	r25, 0x00	; 0
     384:	0e 94 cb 00 	call	0x196	; 0x196 <delay_set>


}
     388:	00 00       	nop
     38a:	0f 90       	pop	r0
     38c:	0f 90       	pop	r0
     38e:	df 91       	pop	r29
     390:	cf 91       	pop	r28
     392:	08 95       	ret

00000394 <state_2>:


void state_2()
{
     394:	cf 93       	push	r28
     396:	df 93       	push	r29
     398:	cd b7       	in	r28, 0x3d	; 61
     39a:	de b7       	in	r29, 0x3e	; 62
    delay_set(0,100);
     39c:	64 e6       	ldi	r22, 0x64	; 100
     39e:	70 e0       	ldi	r23, 0x00	; 0
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	0e 94 cb 00 	call	0x196	; 0x196 <delay_set>
    led_off();
     3a8:	0e 94 2c 03 	call	0x658	; 0x658 <led_off>
    blink_state = '1';
     3ac:	81 e3       	ldi	r24, 0x31	; 49
     3ae:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <blink_state>
}
     3b2:	00 00       	nop
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	08 95       	ret

000003ba <led_set_blink>:



void led_set_blink(char * msg)
{
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	00 d0       	rcall	.+0      	; 0x3c0 <led_set_blink+0x6>
     3c0:	cd b7       	in	r28, 0x3d	; 61
     3c2:	de b7       	in	r29, 0x3e	; 62
     3c4:	9a 83       	std	Y+2, r25	; 0x02
     3c6:	89 83       	std	Y+1, r24	; 0x01
    blink_msg = msg;
     3c8:	89 81       	ldd	r24, Y+1	; 0x01
     3ca:	9a 81       	ldd	r25, Y+2	; 0x02
     3cc:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <blink_msg+0x1>
     3d0:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <blink_msg>
    blink_pos = 0;
     3d4:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <blink_pos+0x1>
     3d8:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <blink_pos>
    blink_state = '1';
     3dc:	81 e3       	ldi	r24, 0x31	; 49
     3de:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <blink_state>
    delay_set(0,0);
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	0e 94 cb 00 	call	0x196	; 0x196 <delay_set>
    led_off();
     3ee:	0e 94 2c 03 	call	0x658	; 0x658 <led_off>

}
     3f2:	00 00       	nop
     3f4:	0f 90       	pop	r0
     3f6:	0f 90       	pop	r0
     3f8:	df 91       	pop	r29
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <led_update>:


void led_update()
{
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
    if(delay_isdone(0))
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	0e 94 09 01 	call	0x212	; 0x212 <delay_isdone>
     40e:	89 2b       	or	r24, r25
     410:	69 f1       	breq	.+90     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
    {
        switch(blink_state)
     412:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <blink_state>
     416:	88 2f       	mov	r24, r24
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	81 33       	cpi	r24, 0x31	; 49
     41c:	91 05       	cpc	r25, r1
     41e:	19 f0       	breq	.+6      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
     420:	c2 97       	sbiw	r24, 0x32	; 50
     422:	21 f0       	breq	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     424:	06 c0       	rjmp	.+12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
        {
            case '1': //For state 1
                state_1();
     426:	0e 94 7e 01 	call	0x2fc	; 0x2fc <state_1>
            break;
     42a:	03 c0       	rjmp	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
            case '2': //For state 2
                state_2();
     42c:	0e 94 ca 01 	call	0x394	; 0x394 <state_2>
            break;
     430:	00 00       	nop

        }
        if (blink_msg[blink_pos+1] != 0)
     432:	20 91 8a 01 	lds	r18, 0x018A	; 0x80018a <blink_msg>
     436:	30 91 8b 01 	lds	r19, 0x018B	; 0x80018b <blink_msg+0x1>
     43a:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <blink_pos>
     43e:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <blink_pos+0x1>
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	82 0f       	add	r24, r18
     446:	93 1f       	adc	r25, r19
     448:	fc 01       	movw	r30, r24
     44a:	80 81       	ld	r24, Z
     44c:	88 23       	and	r24, r24
     44e:	51 f0       	breq	.+20     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
        {
            blink_pos++;
     450:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <blink_pos>
     454:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <blink_pos+0x1>
     458:	01 96       	adiw	r24, 0x01	; 1
     45a:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <blink_pos+0x1>
     45e:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <blink_pos>
            blink_pos = 0;
        }

    }

}
     462:	04 c0       	rjmp	.+8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
        {
            blink_pos++;
        }
        else
        {
            blink_pos = 0;
     464:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <blink_pos+0x1>
     468:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <blink_pos>
        }

    }

}
     46c:	00 00       	nop
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	08 95       	ret

00000474 <main>:
#include "timer1.h"
#include "rtc.h"
#include "uart.h"

int main(void)
{
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	cd b7       	in	r28, 0x3d	; 61
     47a:	de b7       	in	r29, 0x3e	; 62
    uart_init();
     47c:	0e 94 92 06 	call	0xd24	; 0xd24 <uart_init>
    led_init();
     480:	0e 94 27 03 	call	0x64e	; 0x64e <led_init>
    rtc_init();
     484:	0e 94 33 03 	call	0x666	; 0x666 <rtc_init>

    uart_writestr("SER 486 Project 1 - Nahtaniel Bryant \n\r");
     488:	84 e1       	ldi	r24, 0x14	; 20
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	0e 94 98 06 	call	0xd30	; 0xd30 <uart_writestr>
        /* get baseline performance */
    rtc_set_by_datestr("01/01/2019 00:00:00");
     490:	8c e3       	ldi	r24, 0x3C	; 60
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	0e 94 62 03 	call	0x6c4	; 0x6c4 <rtc_set_by_datestr>
    led_set_blink("--- -.-");
     498:	80 e5       	ldi	r24, 0x50	; 80
     49a:	91 e0       	ldi	r25, 0x01	; 1
     49c:	0e 94 dd 01 	call	0x3ba	; 0x3ba <led_set_blink>

    while(1)
    {
        led_update();
     4a0:	0e 94 ff 01 	call	0x3fe	; 0x3fe <led_update>
        delay_set(1 , 500);
     4a4:	64 ef       	ldi	r22, 0xF4	; 244
     4a6:	71 e0       	ldi	r23, 0x01	; 1
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	0e 94 cb 00 	call	0x196	; 0x196 <delay_set>
        while(!delay_isdone(1));
     4b0:	00 00       	nop
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 09 01 	call	0x212	; 0x212 <delay_isdone>
     4ba:	89 2b       	or	r24, r25
     4bc:	d1 f3       	breq	.-12     	; 0x4b2 <main+0x3e>
        uart_writestr(rtc_get_date_string());
     4be:	0e 94 12 06 	call	0xc24	; 0xc24 <rtc_get_date_string>
     4c2:	0e 94 98 06 	call	0xd30	; 0xd30 <uart_writestr>
        uart_writestr("\r");
     4c6:	88 e5       	ldi	r24, 0x58	; 88
     4c8:	91 e0       	ldi	r25, 0x01	; 1
     4ca:	0e 94 98 06 	call	0xd30	; 0xd30 <uart_writestr>

    }
     4ce:	e8 cf       	rjmp	.-48     	; 0x4a0 <main+0x2c>

000004d0 <timer1_init>:
#define SREG   (* ((volatile char*) 0x5F))
volatile unsigned long timer_count;


void timer1_init()
{
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	cd b7       	in	r28, 0x3d	; 61
     4d6:	de b7       	in	r29, 0x3e	; 62
    TCCR1A |= ((1<<7)|(1<<6)); //setting COM1A0 to 1 for compare match
     4d8:	80 e8       	ldi	r24, 0x80	; 128
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	20 e8       	ldi	r18, 0x80	; 128
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	f9 01       	movw	r30, r18
     4e2:	20 81       	ld	r18, Z
     4e4:	20 6c       	ori	r18, 0xC0	; 192
     4e6:	fc 01       	movw	r30, r24
     4e8:	20 83       	st	Z, r18
    TCCR1B |= (1<<3); //Turning on CTC mode comparing to OCR1A
     4ea:	81 e8       	ldi	r24, 0x81	; 129
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	21 e8       	ldi	r18, 0x81	; 129
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	f9 01       	movw	r30, r18
     4f4:	20 81       	ld	r18, Z
     4f6:	28 60       	ori	r18, 0x08	; 8
     4f8:	fc 01       	movw	r30, r24
     4fa:	20 83       	st	Z, r18
    TCCR1B |= ((1<<2) | (1<<0));//Turns on prescaller to 1024
     4fc:	81 e8       	ldi	r24, 0x81	; 129
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	21 e8       	ldi	r18, 0x81	; 129
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	f9 01       	movw	r30, r18
     506:	20 81       	ld	r18, Z
     508:	25 60       	ori	r18, 0x05	; 5
     50a:	fc 01       	movw	r30, r24
     50c:	20 83       	st	Z, r18
    TIMSK1 |= (1<<1);//Turns on compare ORC1A active
     50e:	8f e6       	ldi	r24, 0x6F	; 111
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	2f e6       	ldi	r18, 0x6F	; 111
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	f9 01       	movw	r30, r18
     518:	20 81       	ld	r18, Z
     51a:	22 60       	ori	r18, 0x02	; 2
     51c:	fc 01       	movw	r30, r24
     51e:	20 83       	st	Z, r18
    //Sets the OCR1A to 15525
    OCR1AH |= 0x3D;
     520:	89 e8       	ldi	r24, 0x89	; 137
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	29 e8       	ldi	r18, 0x89	; 137
     526:	30 e0       	ldi	r19, 0x00	; 0
     528:	f9 01       	movw	r30, r18
     52a:	20 81       	ld	r18, Z
     52c:	2d 63       	ori	r18, 0x3D	; 61
     52e:	fc 01       	movw	r30, r24
     530:	20 83       	st	Z, r18
    OCR1AL |= 0x08;
     532:	88 e8       	ldi	r24, 0x88	; 136
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	28 e8       	ldi	r18, 0x88	; 136
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	f9 01       	movw	r30, r18
     53c:	20 81       	ld	r18, Z
     53e:	28 60       	ori	r18, 0x08	; 8
     540:	fc 01       	movw	r30, r24
     542:	20 83       	st	Z, r18


}
     544:	00 00       	nop
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	08 95       	ret

0000054c <timer1_get>:


unsigned long timer1_get()
{
     54c:	cf 93       	push	r28
     54e:	df 93       	push	r29
     550:	00 d0       	rcall	.+0      	; 0x552 <timer1_get+0x6>
     552:	00 d0       	rcall	.+0      	; 0x554 <timer1_get+0x8>
     554:	00 d0       	rcall	.+0      	; 0x556 <timer1_get+0xa>
     556:	cd b7       	in	r28, 0x3d	; 61
     558:	de b7       	in	r29, 0x3e	; 62
    unsigned int bitState = SREG;
     55a:	8f e5       	ldi	r24, 0x5F	; 95
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	fc 01       	movw	r30, r24
     560:	80 81       	ld	r24, Z
     562:	08 2e       	mov	r0, r24
     564:	00 0c       	add	r0, r0
     566:	99 0b       	sbc	r25, r25
     568:	9a 83       	std	Y+2, r25	; 0x02
     56a:	89 83       	std	Y+1, r24	; 0x01
    __builtin_avr_cli(); //Turn off interrupts
     56c:	f8 94       	cli
    //WE ARE NOW ATOMIC
    unsigned long countValue = timer_count;
     56e:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <timer_count>
     572:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <timer_count+0x1>
     576:	a0 91 8e 01 	lds	r26, 0x018E	; 0x80018e <timer_count+0x2>
     57a:	b0 91 8f 01 	lds	r27, 0x018F	; 0x80018f <timer_count+0x3>
     57e:	8b 83       	std	Y+3, r24	; 0x03
     580:	9c 83       	std	Y+4, r25	; 0x04
     582:	ad 83       	std	Y+5, r26	; 0x05
     584:	be 83       	std	Y+6, r27	; 0x06
    SREG = bitState;
     586:	8f e5       	ldi	r24, 0x5F	; 95
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	29 81       	ldd	r18, Y+1	; 0x01
     58c:	fc 01       	movw	r30, r24
     58e:	20 83       	st	Z, r18
    //We are not longer atomic
    return countValue;
     590:	8b 81       	ldd	r24, Y+3	; 0x03
     592:	9c 81       	ldd	r25, Y+4	; 0x04
     594:	ad 81       	ldd	r26, Y+5	; 0x05
     596:	be 81       	ldd	r27, Y+6	; 0x06

}
     598:	bc 01       	movw	r22, r24
     59a:	cd 01       	movw	r24, r26
     59c:	26 96       	adiw	r28, 0x06	; 6
     59e:	0f b6       	in	r0, 0x3f	; 63
     5a0:	f8 94       	cli
     5a2:	de bf       	out	0x3e, r29	; 62
     5a4:	0f be       	out	0x3f, r0	; 63
     5a6:	cd bf       	out	0x3d, r28	; 61
     5a8:	df 91       	pop	r29
     5aa:	cf 91       	pop	r28
     5ac:	08 95       	ret

000005ae <timer1_clear>:

void timer1_clear()
{
     5ae:	cf 93       	push	r28
     5b0:	df 93       	push	r29
     5b2:	00 d0       	rcall	.+0      	; 0x5b4 <timer1_clear+0x6>
     5b4:	cd b7       	in	r28, 0x3d	; 61
     5b6:	de b7       	in	r29, 0x3e	; 62
    unsigned int bitState = SREG;
     5b8:	8f e5       	ldi	r24, 0x5F	; 95
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	fc 01       	movw	r30, r24
     5be:	80 81       	ld	r24, Z
     5c0:	08 2e       	mov	r0, r24
     5c2:	00 0c       	add	r0, r0
     5c4:	99 0b       	sbc	r25, r25
     5c6:	9a 83       	std	Y+2, r25	; 0x02
     5c8:	89 83       	std	Y+1, r24	; 0x01
    __builtin_avr_cli(); //Turn off interrupts
     5ca:	f8 94       	cli
    //WE ARE NOW ATOMIC
    timer_count = 0;
     5cc:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <timer_count>
     5d0:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <timer_count+0x1>
     5d4:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <timer_count+0x2>
     5d8:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <timer_count+0x3>
    SREG = bitState;
     5dc:	8f e5       	ldi	r24, 0x5F	; 95
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	29 81       	ldd	r18, Y+1	; 0x01
     5e2:	fc 01       	movw	r30, r24
     5e4:	20 83       	st	Z, r18
    //WE are not longer atomic

}
     5e6:	00 00       	nop
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	df 91       	pop	r29
     5ee:	cf 91       	pop	r28
     5f0:	08 95       	ret

000005f2 <__vector_11>:


void __vector_11(void) __attribute__ ((signal,used, externally_visible));
void __vector_11(void)
{
     5f2:	1f 92       	push	r1
     5f4:	0f 92       	push	r0
     5f6:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5fa:	0f 92       	push	r0
     5fc:	11 24       	eor	r1, r1
     5fe:	8f 93       	push	r24
     600:	9f 93       	push	r25
     602:	af 93       	push	r26
     604:	bf 93       	push	r27
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
    timer_count++;
     60e:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <timer_count>
     612:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <timer_count+0x1>
     616:	a0 91 8e 01 	lds	r26, 0x018E	; 0x80018e <timer_count+0x2>
     61a:	b0 91 8f 01 	lds	r27, 0x018F	; 0x80018f <timer_count+0x3>
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	a1 1d       	adc	r26, r1
     622:	b1 1d       	adc	r27, r1
     624:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <timer_count>
     628:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <timer_count+0x1>
     62c:	a0 93 8e 01 	sts	0x018E, r26	; 0x80018e <timer_count+0x2>
     630:	b0 93 8f 01 	sts	0x018F, r27	; 0x80018f <timer_count+0x3>

}
     634:	00 00       	nop
     636:	df 91       	pop	r29
     638:	cf 91       	pop	r28
     63a:	bf 91       	pop	r27
     63c:	af 91       	pop	r26
     63e:	9f 91       	pop	r25
     640:	8f 91       	pop	r24
     642:	0f 90       	pop	r0
     644:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     648:	0f 90       	pop	r0
     64a:	1f 90       	pop	r1
     64c:	18 95       	reti

0000064e <led_init>:
     64e:	21 9a       	sbi	0x04, 1	; 4
     650:	29 98       	cbi	0x05, 1	; 5
     652:	08 95       	ret

00000654 <led_on>:
     654:	29 9a       	sbi	0x05, 1	; 5
     656:	08 95       	ret

00000658 <led_off>:
     658:	29 98       	cbi	0x05, 1	; 5
     65a:	08 95       	ret

0000065c <led_is_on>:
     65c:	85 b1       	in	r24, 0x05	; 5
     65e:	86 95       	lsr	r24
     660:	81 70       	andi	r24, 0x01	; 1
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	08 95       	ret

00000666 <rtc_init>:
     666:	0c 94 68 02 	jmp	0x4d0	; 0x4d0 <timer1_init>

0000066a <rtc_get_date>:
     66a:	0f 93       	push	r16
     66c:	1f 93       	push	r17
     66e:	0e 94 a6 02 	call	0x54c	; 0x54c <timer1_get>
     672:	00 91 90 01 	lds	r16, 0x0190	; 0x800190 <rtc_base>
     676:	10 91 91 01 	lds	r17, 0x0191	; 0x800191 <rtc_base+0x1>
     67a:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <rtc_base+0x2>
     67e:	30 91 93 01 	lds	r19, 0x0193	; 0x800193 <rtc_base+0x3>
     682:	60 0f       	add	r22, r16
     684:	71 1f       	adc	r23, r17
     686:	82 1f       	adc	r24, r18
     688:	93 1f       	adc	r25, r19
     68a:	1f 91       	pop	r17
     68c:	0f 91       	pop	r16
     68e:	08 95       	ret

00000690 <is_leapyear>:
     690:	9c 01       	movw	r18, r24
     692:	60 e9       	ldi	r22, 0x90	; 144
     694:	71 e0       	ldi	r23, 0x01	; 1
     696:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     69a:	89 2b       	or	r24, r25
     69c:	79 f0       	breq	.+30     	; 0x6bc <is_leapyear+0x2c>
     69e:	c9 01       	movw	r24, r18
     6a0:	83 70       	andi	r24, 0x03	; 3
     6a2:	99 27       	eor	r25, r25
     6a4:	89 2b       	or	r24, r25
     6a6:	61 f4       	brne	.+24     	; 0x6c0 <is_leapyear+0x30>
     6a8:	c9 01       	movw	r24, r18
     6aa:	64 e6       	ldi	r22, 0x64	; 100
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     6b2:	9c 01       	movw	r18, r24
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	23 2b       	or	r18, r19
     6b8:	21 f4       	brne	.+8      	; 0x6c2 <is_leapyear+0x32>
     6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <is_leapyear+0x30>
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	08 95       	ret
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	08 95       	ret

000006c4 <rtc_set_by_datestr>:
     6c4:	2f 92       	push	r2
     6c6:	3f 92       	push	r3
     6c8:	4f 92       	push	r4
     6ca:	5f 92       	push	r5
     6cc:	6f 92       	push	r6
     6ce:	7f 92       	push	r7
     6d0:	8f 92       	push	r8
     6d2:	9f 92       	push	r9
     6d4:	af 92       	push	r10
     6d6:	bf 92       	push	r11
     6d8:	cf 92       	push	r12
     6da:	df 92       	push	r13
     6dc:	ef 92       	push	r14
     6de:	ff 92       	push	r15
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
     6ec:	67 97       	sbiw	r28, 0x17	; 23
     6ee:	0f b6       	in	r0, 0x3f	; 63
     6f0:	f8 94       	cli
     6f2:	de bf       	out	0x3e, r29	; 62
     6f4:	0f be       	out	0x3f, r0	; 63
     6f6:	cd bf       	out	0x3d, r28	; 61
     6f8:	2c e0       	ldi	r18, 0x0C	; 12
     6fa:	ea e5       	ldi	r30, 0x5A	; 90
     6fc:	f1 e0       	ldi	r31, 0x01	; 1
     6fe:	ae 01       	movw	r20, r28
     700:	4f 5f       	subi	r20, 0xFF	; 255
     702:	5f 4f       	sbci	r21, 0xFF	; 255
     704:	1a 01       	movw	r2, r20
     706:	da 01       	movw	r26, r20
     708:	01 90       	ld	r0, Z+
     70a:	0d 92       	st	X+, r0
     70c:	2a 95       	dec	r18
     70e:	e1 f7       	brne	.-8      	; 0x708 <rtc_set_by_datestr+0x44>
     710:	dc 01       	movw	r26, r24
     712:	2c 91       	ld	r18, X
     714:	22 0f       	add	r18, r18
     716:	20 56       	subi	r18, 0x60	; 96
     718:	32 2f       	mov	r19, r18
     71a:	33 0f       	add	r19, r19
     71c:	33 0f       	add	r19, r19
     71e:	23 0f       	add	r18, r19
     720:	11 96       	adiw	r26, 0x01	; 1
     722:	3c 91       	ld	r19, X
     724:	11 97       	sbiw	r26, 0x01	; 1
     726:	31 53       	subi	r19, 0x31	; 49
     728:	23 0f       	add	r18, r19
     72a:	2d 87       	std	Y+13, r18	; 0x0d
     72c:	13 96       	adiw	r26, 0x03	; 3
     72e:	2c 91       	ld	r18, X
     730:	13 97       	sbiw	r26, 0x03	; 3
     732:	02 2e       	mov	r0, r18
     734:	00 0c       	add	r0, r0
     736:	33 0b       	sbc	r19, r19
     738:	20 53       	subi	r18, 0x30	; 48
     73a:	31 09       	sbc	r19, r1
     73c:	6a e0       	ldi	r22, 0x0A	; 10
     73e:	62 9f       	mul	r22, r18
     740:	a0 01       	movw	r20, r0
     742:	63 9f       	mul	r22, r19
     744:	50 0d       	add	r21, r0
     746:	11 24       	eor	r1, r1
     748:	14 96       	adiw	r26, 0x04	; 4
     74a:	cc 90       	ld	r12, X
     74c:	0c 2c       	mov	r0, r12
     74e:	00 0c       	add	r0, r0
     750:	dd 08       	sbc	r13, r13
     752:	b0 e3       	ldi	r27, 0x30	; 48
     754:	cb 1a       	sub	r12, r27
     756:	d1 08       	sbc	r13, r1
     758:	c4 0e       	add	r12, r20
     75a:	d5 1e       	adc	r13, r21
     75c:	86 01       	movw	r16, r12
     75e:	01 50       	subi	r16, 0x01	; 1
     760:	11 09       	sbc	r17, r1
     762:	fc 01       	movw	r30, r24
     764:	26 81       	ldd	r18, Z+6	; 0x06
     766:	02 2e       	mov	r0, r18
     768:	00 0c       	add	r0, r0
     76a:	33 0b       	sbc	r19, r19
     76c:	20 53       	subi	r18, 0x30	; 48
     76e:	31 09       	sbc	r19, r1
     770:	e8 ee       	ldi	r30, 0xE8	; 232
     772:	f3 e0       	ldi	r31, 0x03	; 3
     774:	2e 9f       	mul	r18, r30
     776:	a0 01       	movw	r20, r0
     778:	2f 9f       	mul	r18, r31
     77a:	50 0d       	add	r21, r0
     77c:	3e 9f       	mul	r19, r30
     77e:	50 0d       	add	r21, r0
     780:	11 24       	eor	r1, r1
     782:	dc 01       	movw	r26, r24
     784:	17 96       	adiw	r26, 0x07	; 7
     786:	2c 91       	ld	r18, X
     788:	17 97       	sbiw	r26, 0x07	; 7
     78a:	02 2e       	mov	r0, r18
     78c:	00 0c       	add	r0, r0
     78e:	33 0b       	sbc	r19, r19
     790:	20 53       	subi	r18, 0x30	; 48
     792:	31 09       	sbc	r19, r1
     794:	74 e6       	ldi	r23, 0x64	; 100
     796:	72 9f       	mul	r23, r18
     798:	70 01       	movw	r14, r0
     79a:	73 9f       	mul	r23, r19
     79c:	f0 0c       	add	r15, r0
     79e:	11 24       	eor	r1, r1
     7a0:	e4 0e       	add	r14, r20
     7a2:	f5 1e       	adc	r15, r21
     7a4:	18 96       	adiw	r26, 0x08	; 8
     7a6:	4c 91       	ld	r20, X
     7a8:	18 97       	sbiw	r26, 0x08	; 8
     7aa:	04 2e       	mov	r0, r20
     7ac:	00 0c       	add	r0, r0
     7ae:	55 0b       	sbc	r21, r21
     7b0:	40 53       	subi	r20, 0x30	; 48
     7b2:	51 09       	sbc	r21, r1
     7b4:	64 9f       	mul	r22, r20
     7b6:	90 01       	movw	r18, r0
     7b8:	65 9f       	mul	r22, r21
     7ba:	30 0d       	add	r19, r0
     7bc:	11 24       	eor	r1, r1
     7be:	e2 0e       	add	r14, r18
     7c0:	f3 1e       	adc	r15, r19
     7c2:	19 96       	adiw	r26, 0x09	; 9
     7c4:	2c 91       	ld	r18, X
     7c6:	19 97       	sbiw	r26, 0x09	; 9
     7c8:	f7 01       	movw	r30, r14
     7ca:	e2 0f       	add	r30, r18
     7cc:	f1 1d       	adc	r31, r1
     7ce:	27 fd       	sbrc	r18, 7
     7d0:	fa 95       	dec	r31
     7d2:	af 01       	movw	r20, r30
     7d4:	58 50       	subi	r21, 0x08	; 8
     7d6:	7a 01       	movw	r14, r20
     7d8:	1b 96       	adiw	r26, 0x0b	; 11
     7da:	2c 91       	ld	r18, X
     7dc:	1b 97       	sbiw	r26, 0x0b	; 11
     7de:	22 0f       	add	r18, r18
     7e0:	20 56       	subi	r18, 0x60	; 96
     7e2:	32 2f       	mov	r19, r18
     7e4:	33 0f       	add	r19, r19
     7e6:	33 0f       	add	r19, r19
     7e8:	23 0f       	add	r18, r19
     7ea:	1c 96       	adiw	r26, 0x0c	; 12
     7ec:	3c 91       	ld	r19, X
     7ee:	1c 97       	sbiw	r26, 0x0c	; 12
     7f0:	30 53       	subi	r19, 0x30	; 48
     7f2:	23 0f       	add	r18, r19
     7f4:	29 8b       	std	Y+17, r18	; 0x11
     7f6:	1e 96       	adiw	r26, 0x0e	; 14
     7f8:	2c 91       	ld	r18, X
     7fa:	1e 97       	sbiw	r26, 0x0e	; 14
     7fc:	22 0f       	add	r18, r18
     7fe:	20 56       	subi	r18, 0x60	; 96
     800:	32 2f       	mov	r19, r18
     802:	33 0f       	add	r19, r19
     804:	33 0f       	add	r19, r19
     806:	23 0f       	add	r18, r19
     808:	1f 96       	adiw	r26, 0x0f	; 15
     80a:	3c 91       	ld	r19, X
     80c:	1f 97       	sbiw	r26, 0x0f	; 15
     80e:	30 53       	subi	r19, 0x30	; 48
     810:	23 0f       	add	r18, r19
     812:	2a 8b       	std	Y+18, r18	; 0x12
     814:	51 96       	adiw	r26, 0x11	; 17
     816:	2c 91       	ld	r18, X
     818:	51 97       	sbiw	r26, 0x11	; 17
     81a:	22 0f       	add	r18, r18
     81c:	20 56       	subi	r18, 0x60	; 96
     81e:	32 2f       	mov	r19, r18
     820:	33 0f       	add	r19, r19
     822:	33 0f       	add	r19, r19
     824:	23 0f       	add	r18, r19
     826:	52 96       	adiw	r26, 0x12	; 18
     828:	8c 91       	ld	r24, X
     82a:	80 53       	subi	r24, 0x30	; 48
     82c:	28 0f       	add	r18, r24
     82e:	2b 8b       	std	Y+19, r18	; 0x13
     830:	ca 01       	movw	r24, r20
     832:	0e 94 48 03 	call	0x690	; 0x690 <is_leapyear>
     836:	88 23       	and	r24, r24
     838:	21 f0       	breq	.+8      	; 0x842 <rtc_set_by_datestr+0x17e>
     83a:	5d 85       	ldd	r21, Y+13	; 0x0d
     83c:	52 30       	cpi	r21, 0x02	; 2
     83e:	08 f0       	brcs	.+2      	; 0x842 <rtc_set_by_datestr+0x17e>
     840:	86 01       	movw	r16, r12
     842:	c7 01       	movw	r24, r14
     844:	60 e9       	ldi	r22, 0x90	; 144
     846:	71 e0       	ldi	r23, 0x01	; 1
     848:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     84c:	fc 01       	movw	r30, r24
     84e:	db 01       	movw	r26, r22
     850:	20 e8       	ldi	r18, 0x80	; 128
     852:	39 e5       	ldi	r19, 0x59	; 89
     854:	40 e6       	ldi	r20, 0x60	; 96
     856:	50 ef       	ldi	r21, 0xF0	; 240
     858:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     85c:	2b 01       	movw	r4, r22
     85e:	3c 01       	movw	r6, r24
     860:	cf 01       	movw	r24, r30
     862:	64 e6       	ldi	r22, 0x64	; 100
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     86a:	fc 01       	movw	r30, r24
     86c:	db 01       	movw	r26, r22
     86e:	20 e0       	ldi	r18, 0x00	; 0
     870:	32 ec       	ldi	r19, 0xC2	; 194
     872:	47 e1       	ldi	r20, 0x17	; 23
     874:	5c eb       	ldi	r21, 0xBC	; 188
     876:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     87a:	4b 01       	movw	r8, r22
     87c:	5c 01       	movw	r10, r24
     87e:	df 01       	movw	r26, r30
     880:	b6 95       	lsr	r27
     882:	a7 95       	ror	r26
     884:	b6 95       	lsr	r27
     886:	a7 95       	ror	r26
     888:	20 e8       	ldi	r18, 0x80	; 128
     88a:	3f e1       	ldi	r19, 0x1F	; 31
     88c:	46 e8       	ldi	r20, 0x86	; 134
     88e:	57 e0       	ldi	r21, 0x07	; 7
     890:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     894:	6b 01       	movw	r12, r22
     896:	7c 01       	movw	r14, r24
     898:	df 01       	movw	r26, r30
     89a:	a3 70       	andi	r26, 0x03	; 3
     89c:	bb 27       	eor	r27, r27
     89e:	20 e8       	ldi	r18, 0x80	; 128
     8a0:	33 e3       	ldi	r19, 0x33	; 51
     8a2:	41 ee       	ldi	r20, 0xE1	; 225
     8a4:	51 e0       	ldi	r21, 0x01	; 1
     8a6:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     8aa:	6c 8b       	std	Y+20, r22	; 0x14
     8ac:	7d 8b       	std	Y+21, r23	; 0x15
     8ae:	8e 8b       	std	Y+22, r24	; 0x16
     8b0:	9f 8b       	std	Y+23, r25	; 0x17
     8b2:	f1 01       	movw	r30, r2
     8b4:	8e 2f       	mov	r24, r30
     8b6:	82 19       	sub	r24, r2
     8b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     8ba:	89 17       	cp	r24, r25
     8bc:	20 f4       	brcc	.+8      	; 0x8c6 <rtc_set_by_datestr+0x202>
     8be:	81 91       	ld	r24, Z+
     8c0:	08 0f       	add	r16, r24
     8c2:	11 1d       	adc	r17, r1
     8c4:	f7 cf       	rjmp	.-18     	; 0x8b4 <rtc_set_by_datestr+0x1f0>
     8c6:	a9 89       	ldd	r26, Y+17	; 0x11
     8c8:	2a 2f       	mov	r18, r26
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	a0 e1       	ldi	r26, 0x10	; 16
     8ce:	be e0       	ldi	r27, 0x0E	; 14
     8d0:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
     8d4:	6d 87       	std	Y+13, r22	; 0x0d
     8d6:	7e 87       	std	Y+14, r23	; 0x0e
     8d8:	8f 87       	std	Y+15, r24	; 0x0f
     8da:	98 8b       	std	Y+16, r25	; 0x10
     8dc:	ba 89       	ldd	r27, Y+18	; 0x12
     8de:	2b 2f       	mov	r18, r27
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	ac e3       	ldi	r26, 0x3C	; 60
     8e4:	b0 e0       	ldi	r27, 0x00	; 0
     8e6:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
     8ea:	2d 85       	ldd	r18, Y+13	; 0x0d
     8ec:	3e 85       	ldd	r19, Y+14	; 0x0e
     8ee:	4f 85       	ldd	r20, Y+15	; 0x0f
     8f0:	58 89       	ldd	r21, Y+16	; 0x10
     8f2:	26 0f       	add	r18, r22
     8f4:	37 1f       	adc	r19, r23
     8f6:	48 1f       	adc	r20, r24
     8f8:	59 1f       	adc	r21, r25
     8fa:	da 01       	movw	r26, r20
     8fc:	c9 01       	movw	r24, r18
     8fe:	3b 89       	ldd	r19, Y+19	; 0x13
     900:	83 0f       	add	r24, r19
     902:	91 1d       	adc	r25, r1
     904:	a1 1d       	adc	r26, r1
     906:	b1 1d       	adc	r27, r1
     908:	48 0e       	add	r4, r24
     90a:	59 1e       	adc	r5, r25
     90c:	6a 1e       	adc	r6, r26
     90e:	7b 1e       	adc	r7, r27
     910:	84 0c       	add	r8, r4
     912:	95 1c       	adc	r9, r5
     914:	a6 1c       	adc	r10, r6
     916:	b7 1c       	adc	r11, r7
     918:	c8 0c       	add	r12, r8
     91a:	d9 1c       	adc	r13, r9
     91c:	ea 1c       	adc	r14, r10
     91e:	fb 1c       	adc	r15, r11
     920:	8c 89       	ldd	r24, Y+20	; 0x14
     922:	9d 89       	ldd	r25, Y+21	; 0x15
     924:	ae 89       	ldd	r26, Y+22	; 0x16
     926:	bf 89       	ldd	r27, Y+23	; 0x17
     928:	c8 0e       	add	r12, r24
     92a:	d9 1e       	adc	r13, r25
     92c:	ea 1e       	adc	r14, r26
     92e:	fb 1e       	adc	r15, r27
     930:	d8 01       	movw	r26, r16
     932:	20 e8       	ldi	r18, 0x80	; 128
     934:	31 e5       	ldi	r19, 0x51	; 81
     936:	41 e0       	ldi	r20, 0x01	; 1
     938:	50 e0       	ldi	r21, 0x00	; 0
     93a:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     93e:	dc 01       	movw	r26, r24
     940:	cb 01       	movw	r24, r22
     942:	8c 0d       	add	r24, r12
     944:	9d 1d       	adc	r25, r13
     946:	ae 1d       	adc	r26, r14
     948:	bf 1d       	adc	r27, r15
     94a:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <rtc_base>
     94e:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <rtc_base+0x1>
     952:	a0 93 92 01 	sts	0x0192, r26	; 0x800192 <rtc_base+0x2>
     956:	b0 93 93 01 	sts	0x0193, r27	; 0x800193 <rtc_base+0x3>
     95a:	67 96       	adiw	r28, 0x17	; 23
     95c:	0f b6       	in	r0, 0x3f	; 63
     95e:	f8 94       	cli
     960:	de bf       	out	0x3e, r29	; 62
     962:	0f be       	out	0x3f, r0	; 63
     964:	cd bf       	out	0x3d, r28	; 61
     966:	df 91       	pop	r29
     968:	cf 91       	pop	r28
     96a:	1f 91       	pop	r17
     96c:	0f 91       	pop	r16
     96e:	ff 90       	pop	r15
     970:	ef 90       	pop	r14
     972:	df 90       	pop	r13
     974:	cf 90       	pop	r12
     976:	bf 90       	pop	r11
     978:	af 90       	pop	r10
     97a:	9f 90       	pop	r9
     97c:	8f 90       	pop	r8
     97e:	7f 90       	pop	r7
     980:	6f 90       	pop	r6
     982:	5f 90       	pop	r5
     984:	4f 90       	pop	r4
     986:	3f 90       	pop	r3
     988:	2f 90       	pop	r2
     98a:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <timer1_clear>

0000098e <get_month>:
     98e:	ef 92       	push	r14
     990:	ff 92       	push	r15
     992:	0f 93       	push	r16
     994:	1f 93       	push	r17
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	cd b7       	in	r28, 0x3d	; 61
     99c:	de b7       	in	r29, 0x3e	; 62
     99e:	68 97       	sbiw	r28, 0x18	; 24
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	f8 94       	cli
     9a4:	de bf       	out	0x3e, r29	; 62
     9a6:	0f be       	out	0x3f, r0	; 63
     9a8:	cd bf       	out	0x3d, r28	; 61
     9aa:	7b 01       	movw	r14, r22
     9ac:	2c e0       	ldi	r18, 0x0C	; 12
     9ae:	ea e5       	ldi	r30, 0x5A	; 90
     9b0:	f1 e0       	ldi	r31, 0x01	; 1
     9b2:	de 01       	movw	r26, r28
     9b4:	1d 96       	adiw	r26, 0x0d	; 13
     9b6:	01 90       	ld	r0, Z+
     9b8:	0d 92       	st	X+, r0
     9ba:	2a 95       	dec	r18
     9bc:	e1 f7       	brne	.-8      	; 0x9b6 <get_month+0x28>
     9be:	8e 01       	movw	r16, r28
     9c0:	0f 5f       	subi	r16, 0xFF	; 255
     9c2:	1f 4f       	sbci	r17, 0xFF	; 255
     9c4:	2c e0       	ldi	r18, 0x0C	; 12
     9c6:	f8 01       	movw	r30, r16
     9c8:	11 92       	st	Z+, r1
     9ca:	2a 95       	dec	r18
     9cc:	e9 f7       	brne	.-6      	; 0x9c8 <get_month+0x3a>
     9ce:	0e 94 48 03 	call	0x690	; 0x690 <is_leapyear>
     9d2:	8a 83       	std	Y+2, r24	; 0x02
     9d4:	de 01       	movw	r26, r28
     9d6:	1d 96       	adiw	r26, 0x0d	; 13
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	f7 01       	movw	r30, r14
     9dc:	40 81       	ld	r20, Z
     9de:	51 81       	ldd	r21, Z+1	; 0x01
     9e0:	9d 91       	ld	r25, X+
     9e2:	f8 01       	movw	r30, r16
     9e4:	21 91       	ld	r18, Z+
     9e6:	8f 01       	movw	r16, r30
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	29 0f       	add	r18, r25
     9ec:	31 1d       	adc	r19, r1
     9ee:	42 17       	cp	r20, r18
     9f0:	53 07       	cpc	r21, r19
     9f2:	40 f0       	brcs	.+16     	; 0xa04 <get_month+0x76>
     9f4:	42 1b       	sub	r20, r18
     9f6:	53 0b       	sbc	r21, r19
     9f8:	f7 01       	movw	r30, r14
     9fa:	51 83       	std	Z+1, r21	; 0x01
     9fc:	40 83       	st	Z, r20
     9fe:	8f 5f       	subi	r24, 0xFF	; 255
     a00:	8c 30       	cpi	r24, 0x0C	; 12
     a02:	59 f7       	brne	.-42     	; 0x9da <get_month+0x4c>
     a04:	68 96       	adiw	r28, 0x18	; 24
     a06:	0f b6       	in	r0, 0x3f	; 63
     a08:	f8 94       	cli
     a0a:	de bf       	out	0x3e, r29	; 62
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	cd bf       	out	0x3d, r28	; 61
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	ff 90       	pop	r15
     a1a:	ef 90       	pop	r14
     a1c:	08 95       	ret

00000a1e <rtc_num2datestr>:
     a1e:	4f 92       	push	r4
     a20:	5f 92       	push	r5
     a22:	6f 92       	push	r6
     a24:	7f 92       	push	r7
     a26:	8f 92       	push	r8
     a28:	9f 92       	push	r9
     a2a:	af 92       	push	r10
     a2c:	bf 92       	push	r11
     a2e:	cf 92       	push	r12
     a30:	df 92       	push	r13
     a32:	ef 92       	push	r14
     a34:	ff 92       	push	r15
     a36:	cf 93       	push	r28
     a38:	df 93       	push	r29
     a3a:	00 d0       	rcall	.+0      	; 0xa3c <rtc_num2datestr+0x1e>
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	2b 01       	movw	r4, r22
     a42:	3c 01       	movw	r6, r24
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	a0 e0       	ldi	r26, 0x00	; 0
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	20 e8       	ldi	r18, 0x80	; 128
     a4e:	42 16       	cp	r4, r18
     a50:	29 e5       	ldi	r18, 0x59	; 89
     a52:	52 06       	cpc	r5, r18
     a54:	20 e6       	ldi	r18, 0x60	; 96
     a56:	62 06       	cpc	r6, r18
     a58:	20 ef       	ldi	r18, 0xF0	; 240
     a5a:	72 06       	cpc	r7, r18
     a5c:	18 f4       	brcc	.+6      	; 0xa64 <rtc_num2datestr+0x46>
     a5e:	80 e0       	ldi	r24, 0x00	; 0
     a60:	90 e0       	ldi	r25, 0x00	; 0
     a62:	dc 01       	movw	r26, r24
     a64:	20 e9       	ldi	r18, 0x90	; 144
     a66:	31 e0       	ldi	r19, 0x01	; 1
     a68:	82 9f       	mul	r24, r18
     a6a:	50 01       	movw	r10, r0
     a6c:	83 9f       	mul	r24, r19
     a6e:	b0 0c       	add	r11, r0
     a70:	92 9f       	mul	r25, r18
     a72:	b0 0c       	add	r11, r0
     a74:	11 24       	eor	r1, r1
     a76:	80 e3       	ldi	r24, 0x30	; 48
     a78:	a8 1a       	sub	r10, r24
     a7a:	88 ef       	ldi	r24, 0xF8	; 248
     a7c:	b8 0a       	sbc	r11, r24
     a7e:	c1 2c       	mov	r12, r1
     a80:	d1 2c       	mov	r13, r1
     a82:	76 01       	movw	r14, r12
     a84:	c3 94       	inc	r12
     a86:	20 e8       	ldi	r18, 0x80	; 128
     a88:	42 16       	cp	r4, r18
     a8a:	29 e5       	ldi	r18, 0x59	; 89
     a8c:	52 06       	cpc	r5, r18
     a8e:	20 e6       	ldi	r18, 0x60	; 96
     a90:	62 06       	cpc	r6, r18
     a92:	20 ef       	ldi	r18, 0xF0	; 240
     a94:	72 06       	cpc	r7, r18
     a96:	18 f4       	brcc	.+6      	; 0xa9e <rtc_num2datestr+0x80>
     a98:	c1 2c       	mov	r12, r1
     a9a:	d1 2c       	mov	r13, r1
     a9c:	76 01       	movw	r14, r12
     a9e:	a7 01       	movw	r20, r14
     aa0:	96 01       	movw	r18, r12
     aa2:	60 e8       	ldi	r22, 0x80	; 128
     aa4:	79 e5       	ldi	r23, 0x59	; 89
     aa6:	80 e6       	ldi	r24, 0x60	; 96
     aa8:	90 ef       	ldi	r25, 0xF0	; 240
     aaa:	0e 94 4e 08 	call	0x109c	; 0x109c <__mulsi3>
     aae:	73 01       	movw	r14, r6
     ab0:	62 01       	movw	r12, r4
     ab2:	c6 1a       	sub	r12, r22
     ab4:	d7 0a       	sbc	r13, r23
     ab6:	e8 0a       	sbc	r14, r24
     ab8:	f9 0a       	sbc	r15, r25
     aba:	81 e0       	ldi	r24, 0x01	; 1
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	a0 e0       	ldi	r26, 0x00	; 0
     ac0:	b0 e0       	ldi	r27, 0x00	; 0
     ac2:	c1 14       	cp	r12, r1
     ac4:	22 ec       	ldi	r18, 0xC2	; 194
     ac6:	d2 06       	cpc	r13, r18
     ac8:	27 e1       	ldi	r18, 0x17	; 23
     aca:	e2 06       	cpc	r14, r18
     acc:	2c eb       	ldi	r18, 0xBC	; 188
     ace:	f2 06       	cpc	r15, r18
     ad0:	18 f4       	brcc	.+6      	; 0xad8 <rtc_num2datestr+0xba>
     ad2:	80 e0       	ldi	r24, 0x00	; 0
     ad4:	90 e0       	ldi	r25, 0x00	; 0
     ad6:	dc 01       	movw	r26, r24
     ad8:	44 e6       	ldi	r20, 0x64	; 100
     ada:	48 9f       	mul	r20, r24
     adc:	90 01       	movw	r18, r0
     ade:	49 9f       	mul	r20, r25
     ae0:	30 0d       	add	r19, r0
     ae2:	11 24       	eor	r1, r1
     ae4:	a2 0e       	add	r10, r18
     ae6:	b3 1e       	adc	r11, r19
     ae8:	21 e0       	ldi	r18, 0x01	; 1
     aea:	30 e0       	ldi	r19, 0x00	; 0
     aec:	40 e0       	ldi	r20, 0x00	; 0
     aee:	50 e0       	ldi	r21, 0x00	; 0
     af0:	c1 14       	cp	r12, r1
     af2:	82 ec       	ldi	r24, 0xC2	; 194
     af4:	d8 06       	cpc	r13, r24
     af6:	87 e1       	ldi	r24, 0x17	; 23
     af8:	e8 06       	cpc	r14, r24
     afa:	8c eb       	ldi	r24, 0xBC	; 188
     afc:	f8 06       	cpc	r15, r24
     afe:	18 f4       	brcc	.+6      	; 0xb06 <rtc_num2datestr+0xe8>
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	a9 01       	movw	r20, r18
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	72 ec       	ldi	r23, 0xC2	; 194
     b0a:	87 e1       	ldi	r24, 0x17	; 23
     b0c:	9c eb       	ldi	r25, 0xBC	; 188
     b0e:	0e 94 4e 08 	call	0x109c	; 0x109c <__mulsi3>
     b12:	a7 01       	movw	r20, r14
     b14:	96 01       	movw	r18, r12
     b16:	26 1b       	sub	r18, r22
     b18:	37 0b       	sbc	r19, r23
     b1a:	48 0b       	sbc	r20, r24
     b1c:	59 0b       	sbc	r21, r25
     b1e:	ca 01       	movw	r24, r20
     b20:	b9 01       	movw	r22, r18
     b22:	20 e8       	ldi	r18, 0x80	; 128
     b24:	3f e1       	ldi	r19, 0x1F	; 31
     b26:	46 e8       	ldi	r20, 0x86	; 134
     b28:	57 e0       	ldi	r21, 0x07	; 7
     b2a:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
     b2e:	22 0f       	add	r18, r18
     b30:	33 1f       	adc	r19, r19
     b32:	22 0f       	add	r18, r18
     b34:	33 1f       	adc	r19, r19
     b36:	a2 0e       	add	r10, r18
     b38:	b3 1e       	adc	r11, r19
     b3a:	20 e8       	ldi	r18, 0x80	; 128
     b3c:	33 e3       	ldi	r19, 0x33	; 51
     b3e:	41 ee       	ldi	r20, 0xE1	; 225
     b40:	51 e0       	ldi	r21, 0x01	; 1
     b42:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
     b46:	75 01       	movw	r14, r10
     b48:	e2 0e       	add	r14, r18
     b4a:	f3 1e       	adc	r15, r19
     b4c:	20 e8       	ldi	r18, 0x80	; 128
     b4e:	31 e5       	ldi	r19, 0x51	; 81
     b50:	41 e0       	ldi	r20, 0x01	; 1
     b52:	50 e0       	ldi	r21, 0x00	; 0
     b54:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
     b58:	4b 01       	movw	r8, r22
     b5a:	5c 01       	movw	r10, r24
     b5c:	3a 83       	std	Y+2, r19	; 0x02
     b5e:	29 83       	std	Y+1, r18	; 0x01
     b60:	be 01       	movw	r22, r28
     b62:	6f 5f       	subi	r22, 0xFF	; 255
     b64:	7f 4f       	sbci	r23, 0xFF	; 255
     b66:	c7 01       	movw	r24, r14
     b68:	0e 94 c7 04 	call	0x98e	; 0x98e <get_month>
     b6c:	d8 2e       	mov	r13, r24
     b6e:	c5 01       	movw	r24, r10
     b70:	b4 01       	movw	r22, r8
     b72:	20 e1       	ldi	r18, 0x10	; 16
     b74:	3e e0       	ldi	r19, 0x0E	; 14
     b76:	40 e0       	ldi	r20, 0x00	; 0
     b78:	50 e0       	ldi	r21, 0x00	; 0
     b7a:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
     b7e:	29 01       	movw	r4, r18
     b80:	3a 01       	movw	r6, r20
     b82:	4b 01       	movw	r8, r22
     b84:	5c 01       	movw	r10, r24
     b86:	66 e6       	ldi	r22, 0x66	; 102
     b88:	71 e0       	ldi	r23, 0x01	; 1
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	0e 94 26 06 	call	0xc4c	; 0xc4c <str_cpy>
     b92:	6d 2d       	mov	r22, r13
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	6f 5f       	subi	r22, 0xFF	; 255
     b98:	7f 4f       	sbci	r23, 0xFF	; 255
     b9a:	42 e0       	ldi	r20, 0x02	; 2
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     ba4:	69 81       	ldd	r22, Y+1	; 0x01
     ba6:	7a 81       	ldd	r23, Y+2	; 0x02
     ba8:	6f 5f       	subi	r22, 0xFF	; 255
     baa:	7f 4f       	sbci	r23, 0xFF	; 255
     bac:	42 e0       	ldi	r20, 0x02	; 2
     bae:	83 e0       	ldi	r24, 0x03	; 3
     bb0:	91 e0       	ldi	r25, 0x01	; 1
     bb2:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     bb6:	44 e0       	ldi	r20, 0x04	; 4
     bb8:	b7 01       	movw	r22, r14
     bba:	86 e0       	ldi	r24, 0x06	; 6
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     bc2:	42 e0       	ldi	r20, 0x02	; 2
     bc4:	b2 01       	movw	r22, r4
     bc6:	8b e0       	ldi	r24, 0x0B	; 11
     bc8:	91 e0       	ldi	r25, 0x01	; 1
     bca:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     bce:	c5 01       	movw	r24, r10
     bd0:	b4 01       	movw	r22, r8
     bd2:	2c e3       	ldi	r18, 0x3C	; 60
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	40 e0       	ldi	r20, 0x00	; 0
     bd8:	50 e0       	ldi	r21, 0x00	; 0
     bda:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
     bde:	49 01       	movw	r8, r18
     be0:	5a 01       	movw	r10, r20
     be2:	6b 01       	movw	r12, r22
     be4:	7c 01       	movw	r14, r24
     be6:	42 e0       	ldi	r20, 0x02	; 2
     be8:	b4 01       	movw	r22, r8
     bea:	8e e0       	ldi	r24, 0x0E	; 14
     bec:	91 e0       	ldi	r25, 0x01	; 1
     bee:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     bf2:	42 e0       	ldi	r20, 0x02	; 2
     bf4:	b6 01       	movw	r22, r12
     bf6:	81 e1       	ldi	r24, 0x11	; 17
     bf8:	91 e0       	ldi	r25, 0x01	; 1
     bfa:	0e 94 30 06 	call	0xc60	; 0xc60 <str_writeudec16>
     bfe:	80 e0       	ldi	r24, 0x00	; 0
     c00:	91 e0       	ldi	r25, 0x01	; 1
     c02:	0f 90       	pop	r0
     c04:	0f 90       	pop	r0
     c06:	df 91       	pop	r29
     c08:	cf 91       	pop	r28
     c0a:	ff 90       	pop	r15
     c0c:	ef 90       	pop	r14
     c0e:	df 90       	pop	r13
     c10:	cf 90       	pop	r12
     c12:	bf 90       	pop	r11
     c14:	af 90       	pop	r10
     c16:	9f 90       	pop	r9
     c18:	8f 90       	pop	r8
     c1a:	7f 90       	pop	r7
     c1c:	6f 90       	pop	r6
     c1e:	5f 90       	pop	r5
     c20:	4f 90       	pop	r4
     c22:	08 95       	ret

00000c24 <rtc_get_date_string>:
     c24:	0f 93       	push	r16
     c26:	1f 93       	push	r17
     c28:	0e 94 a6 02 	call	0x54c	; 0x54c <timer1_get>
     c2c:	00 91 90 01 	lds	r16, 0x0190	; 0x800190 <rtc_base>
     c30:	10 91 91 01 	lds	r17, 0x0191	; 0x800191 <rtc_base+0x1>
     c34:	20 91 92 01 	lds	r18, 0x0192	; 0x800192 <rtc_base+0x2>
     c38:	30 91 93 01 	lds	r19, 0x0193	; 0x800193 <rtc_base+0x3>
     c3c:	60 0f       	add	r22, r16
     c3e:	71 1f       	adc	r23, r17
     c40:	82 1f       	adc	r24, r18
     c42:	93 1f       	adc	r25, r19
     c44:	1f 91       	pop	r17
     c46:	0f 91       	pop	r16
     c48:	0c 94 0f 05 	jmp	0xa1e	; 0xa1e <rtc_num2datestr>

00000c4c <str_cpy>:
     c4c:	fc 01       	movw	r30, r24
     c4e:	db 01       	movw	r26, r22
     c50:	8d 91       	ld	r24, X+
     c52:	bd 01       	movw	r22, r26
     c54:	88 23       	and	r24, r24
     c56:	11 f0       	breq	.+4      	; 0xc5c <str_cpy+0x10>
     c58:	81 93       	st	Z+, r24
     c5a:	f9 cf       	rjmp	.-14     	; 0xc4e <str_cpy+0x2>
     c5c:	10 82       	st	Z, r1
     c5e:	08 95       	ret

00000c60 <str_writeudec16>:
     c60:	9f 92       	push	r9
     c62:	af 92       	push	r10
     c64:	bf 92       	push	r11
     c66:	cf 92       	push	r12
     c68:	df 92       	push	r13
     c6a:	ef 92       	push	r14
     c6c:	ff 92       	push	r15
     c6e:	0f 93       	push	r16
     c70:	1f 93       	push	r17
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	00 d0       	rcall	.+0      	; 0xc78 <str_writeudec16+0x18>
     c78:	00 d0       	rcall	.+0      	; 0xc7a <str_writeudec16+0x1a>
     c7a:	1f 92       	push	r1
     c7c:	cd b7       	in	r28, 0x3d	; 61
     c7e:	de b7       	in	r29, 0x3e	; 62
     c80:	fc 01       	movw	r30, r24
     c82:	6b 01       	movw	r12, r22
     c84:	9e 01       	movw	r18, r28
     c86:	2f 5f       	subi	r18, 0xFF	; 255
     c88:	3f 4f       	sbci	r19, 0xFF	; 255
     c8a:	8e 01       	movw	r16, r28
     c8c:	0a 5f       	subi	r16, 0xFA	; 250
     c8e:	1f 4f       	sbci	r17, 0xFF	; 255
     c90:	ee 24       	eor	r14, r14
     c92:	e3 94       	inc	r14
     c94:	f1 2c       	mov	r15, r1
     c96:	9a e0       	ldi	r25, 0x0A	; 10
     c98:	99 2e       	mov	r9, r25
     c9a:	9e 9c       	mul	r9, r14
     c9c:	50 01       	movw	r10, r0
     c9e:	9f 9c       	mul	r9, r15
     ca0:	b0 0c       	add	r11, r0
     ca2:	11 24       	eor	r1, r1
     ca4:	c6 01       	movw	r24, r12
     ca6:	b5 01       	movw	r22, r10
     ca8:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     cac:	b7 01       	movw	r22, r14
     cae:	0e 94 5e 08 	call	0x10bc	; 0x10bc <__udivmodhi4>
     cb2:	d9 01       	movw	r26, r18
     cb4:	6d 93       	st	X+, r22
     cb6:	9d 01       	movw	r18, r26
     cb8:	c6 1a       	sub	r12, r22
     cba:	d1 08       	sbc	r13, r1
     cbc:	67 fd       	sbrc	r22, 7
     cbe:	d3 94       	inc	r13
     cc0:	75 01       	movw	r14, r10
     cc2:	a0 17       	cp	r26, r16
     cc4:	b1 07       	cpc	r27, r17
     cc6:	49 f7       	brne	.-46     	; 0xc9a <str_writeudec16+0x3a>
     cc8:	60 e0       	ldi	r22, 0x00	; 0
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	84 e0       	ldi	r24, 0x04	; 4
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	50 e0       	ldi	r21, 0x00	; 0
     cd2:	d8 01       	movw	r26, r16
     cd4:	2e 91       	ld	r18, -X
     cd6:	8d 01       	movw	r16, r26
     cd8:	21 11       	cpse	r18, r1
     cda:	05 c0       	rjmp	.+10     	; 0xce6 <str_writeudec16+0x86>
     cdc:	61 15       	cp	r22, r1
     cde:	71 05       	cpc	r23, r1
     ce0:	11 f4       	brne	.+4      	; 0xce6 <str_writeudec16+0x86>
     ce2:	00 97       	sbiw	r24, 0x00	; 0
     ce4:	41 f4       	brne	.+16     	; 0xcf6 <str_writeudec16+0x96>
     ce6:	84 17       	cp	r24, r20
     ce8:	95 07       	cpc	r25, r21
     cea:	2c f4       	brge	.+10     	; 0xcf6 <str_writeudec16+0x96>
     cec:	20 5d       	subi	r18, 0xD0	; 208
     cee:	21 93       	st	Z+, r18
     cf0:	61 e0       	ldi	r22, 0x01	; 1
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	04 c0       	rjmp	.+8      	; 0xcfe <str_writeudec16+0x9e>
     cf6:	84 17       	cp	r24, r20
     cf8:	95 07       	cpc	r25, r21
     cfa:	0c f4       	brge	.+2      	; 0xcfe <str_writeudec16+0x9e>
     cfc:	31 96       	adiw	r30, 0x01	; 1
     cfe:	01 97       	sbiw	r24, 0x01	; 1
     d00:	40 f7       	brcc	.-48     	; 0xcd2 <str_writeudec16+0x72>
     d02:	0f 90       	pop	r0
     d04:	0f 90       	pop	r0
     d06:	0f 90       	pop	r0
     d08:	0f 90       	pop	r0
     d0a:	0f 90       	pop	r0
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	ff 90       	pop	r15
     d16:	ef 90       	pop	r14
     d18:	df 90       	pop	r13
     d1a:	cf 90       	pop	r12
     d1c:	bf 90       	pop	r11
     d1e:	af 90       	pop	r10
     d20:	9f 90       	pop	r9
     d22:	08 95       	ret

00000d24 <uart_init>:
     d24:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <serial_init>
     d28:	78 94       	sei
     d2a:	08 95       	ret

00000d2c <uart_writechar>:
     d2c:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <serial_writechar>

00000d30 <uart_writestr>:
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	ec 01       	movw	r28, r24
     d36:	89 91       	ld	r24, Y+
     d38:	88 23       	and	r24, r24
     d3a:	19 f0       	breq	.+6      	; 0xd42 <uart_writestr+0x12>
     d3c:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
     d40:	fa cf       	rjmp	.-12     	; 0xd36 <uart_writestr+0x6>
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	08 95       	ret

00000d48 <uart_writehex8>:
     d48:	cf 93       	push	r28
     d4a:	c8 2f       	mov	r28, r24
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	24 e0       	ldi	r18, 0x04	; 4
     d50:	95 95       	asr	r25
     d52:	87 95       	ror	r24
     d54:	2a 95       	dec	r18
     d56:	e1 f7       	brne	.-8      	; 0xd50 <uart_writehex8+0x8>
     d58:	8a 30       	cpi	r24, 0x0A	; 10
     d5a:	10 f4       	brcc	.+4      	; 0xd60 <uart_writehex8+0x18>
     d5c:	80 5d       	subi	r24, 0xD0	; 208
     d5e:	01 c0       	rjmp	.+2      	; 0xd62 <uart_writehex8+0x1a>
     d60:	89 5c       	subi	r24, 0xC9	; 201
     d62:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
     d66:	8c 2f       	mov	r24, r28
     d68:	8f 70       	andi	r24, 0x0F	; 15
     d6a:	8a 30       	cpi	r24, 0x0A	; 10
     d6c:	10 f0       	brcs	.+4      	; 0xd72 <uart_writehex8+0x2a>
     d6e:	89 5c       	subi	r24, 0xC9	; 201
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <uart_writehex8+0x2c>
     d72:	80 5d       	subi	r24, 0xD0	; 208
     d74:	cf 91       	pop	r28
     d76:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <serial_writechar>

00000d7a <uart_writehex16>:
     d7a:	cf 93       	push	r28
     d7c:	c8 2f       	mov	r28, r24
     d7e:	89 2f       	mov	r24, r25
     d80:	0e 94 a4 06 	call	0xd48	; 0xd48 <uart_writehex8>
     d84:	8c 2f       	mov	r24, r28
     d86:	cf 91       	pop	r28
     d88:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <uart_writehex8>

00000d8c <uart_writedec32>:
     d8c:	2f 92       	push	r2
     d8e:	3f 92       	push	r3
     d90:	4f 92       	push	r4
     d92:	5f 92       	push	r5
     d94:	6f 92       	push	r6
     d96:	7f 92       	push	r7
     d98:	8f 92       	push	r8
     d9a:	9f 92       	push	r9
     d9c:	af 92       	push	r10
     d9e:	bf 92       	push	r11
     da0:	cf 92       	push	r12
     da2:	df 92       	push	r13
     da4:	ef 92       	push	r14
     da6:	ff 92       	push	r15
     da8:	0f 93       	push	r16
     daa:	1f 93       	push	r17
     dac:	cf 93       	push	r28
     dae:	df 93       	push	r29
     db0:	cd b7       	in	r28, 0x3d	; 61
     db2:	de b7       	in	r29, 0x3e	; 62
     db4:	63 97       	sbiw	r28, 0x13	; 19
     db6:	0f b6       	in	r0, 0x3f	; 63
     db8:	f8 94       	cli
     dba:	de bf       	out	0x3e, r29	; 62
     dbc:	0f be       	out	0x3f, r0	; 63
     dbe:	cd bf       	out	0x3d, r28	; 61
     dc0:	6b 01       	movw	r12, r22
     dc2:	7c 01       	movw	r14, r24
     dc4:	97 ff       	sbrs	r25, 7
     dc6:	0d c0       	rjmp	.+26     	; 0xde2 <uart_writedec32+0x56>
     dc8:	f0 94       	com	r15
     dca:	e0 94       	com	r14
     dcc:	d0 94       	com	r13
     dce:	c0 94       	com	r12
     dd0:	c1 1c       	adc	r12, r1
     dd2:	d1 1c       	adc	r13, r1
     dd4:	e1 1c       	adc	r14, r1
     dd6:	f1 1c       	adc	r15, r1
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	9b 8b       	std	Y+19, r25	; 0x13
     dde:	8a 8b       	std	Y+18, r24	; 0x12
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <uart_writedec32+0x5a>
     de2:	1b 8a       	std	Y+19, r1	; 0x13
     de4:	1a 8a       	std	Y+18, r1	; 0x12
     de6:	fe 01       	movw	r30, r28
     de8:	31 96       	adiw	r30, 0x01	; 1
     dea:	5f 01       	movw	r10, r30
     dec:	8e 01       	movw	r16, r28
     dee:	05 5f       	subi	r16, 0xF5	; 245
     df0:	1f 4f       	sbci	r17, 0xFF	; 255
     df2:	f9 8b       	std	Y+17, r31	; 0x11
     df4:	e8 8b       	std	Y+16, r30	; 0x10
     df6:	66 24       	eor	r6, r6
     df8:	63 94       	inc	r6
     dfa:	71 2c       	mov	r7, r1
     dfc:	81 2c       	mov	r8, r1
     dfe:	91 2c       	mov	r9, r1
     e00:	aa e0       	ldi	r26, 0x0A	; 10
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	93 01       	movw	r18, r6
     e06:	a4 01       	movw	r20, r8
     e08:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
     e0c:	1b 01       	movw	r2, r22
     e0e:	2c 01       	movw	r4, r24
     e10:	c7 01       	movw	r24, r14
     e12:	b6 01       	movw	r22, r12
     e14:	91 01       	movw	r18, r2
     e16:	a2 01       	movw	r20, r4
     e18:	0e 94 94 08 	call	0x1128	; 0x1128 <__divmodsi4>
     e1c:	93 01       	movw	r18, r6
     e1e:	a4 01       	movw	r20, r8
     e20:	0e 94 94 08 	call	0x1128	; 0x1128 <__divmodsi4>
     e24:	e8 89       	ldd	r30, Y+16	; 0x10
     e26:	f9 89       	ldd	r31, Y+17	; 0x11
     e28:	21 93       	st	Z+, r18
     e2a:	f9 8b       	std	Y+17, r31	; 0x11
     e2c:	e8 8b       	std	Y+16, r30	; 0x10
     e2e:	82 2f       	mov	r24, r18
     e30:	22 0f       	add	r18, r18
     e32:	99 0b       	sbc	r25, r25
     e34:	aa 0b       	sbc	r26, r26
     e36:	bb 0b       	sbc	r27, r27
     e38:	c8 1a       	sub	r12, r24
     e3a:	d9 0a       	sbc	r13, r25
     e3c:	ea 0a       	sbc	r14, r26
     e3e:	fb 0a       	sbc	r15, r27
     e40:	31 01       	movw	r6, r2
     e42:	42 01       	movw	r8, r4
     e44:	0e 17       	cp	r16, r30
     e46:	1f 07       	cpc	r17, r31
     e48:	d9 f6       	brne	.-74     	; 0xe00 <uart_writedec32+0x74>
     e4a:	8a 89       	ldd	r24, Y+18	; 0x12
     e4c:	9b 89       	ldd	r25, Y+19	; 0x13
     e4e:	89 2b       	or	r24, r25
     e50:	11 f0       	breq	.+4      	; 0xe56 <uart_writedec32+0xca>
     e52:	8d e2       	ldi	r24, 0x2D	; 45
     e54:	01 c0       	rjmp	.+2      	; 0xe58 <uart_writedec32+0xcc>
     e56:	80 e2       	ldi	r24, 0x20	; 32
     e58:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	f8 01       	movw	r30, r16
     e62:	82 91       	ld	r24, -Z
     e64:	8f 01       	movw	r16, r30
     e66:	81 11       	cpse	r24, r1
     e68:	06 c0       	rjmp	.+12     	; 0xe76 <uart_writedec32+0xea>
     e6a:	21 15       	cp	r18, r1
     e6c:	31 05       	cpc	r19, r1
     e6e:	19 f4       	brne	.+6      	; 0xe76 <uart_writedec32+0xea>
     e70:	ea 15       	cp	r30, r10
     e72:	fb 05       	cpc	r31, r11
     e74:	29 f4       	brne	.+10     	; 0xe80 <uart_writedec32+0xf4>
     e76:	80 5d       	subi	r24, 0xD0	; 208
     e78:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
     e7c:	21 e0       	ldi	r18, 0x01	; 1
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	0a 15       	cp	r16, r10
     e82:	1b 05       	cpc	r17, r11
     e84:	69 f7       	brne	.-38     	; 0xe60 <uart_writedec32+0xd4>
     e86:	63 96       	adiw	r28, 0x13	; 19
     e88:	0f b6       	in	r0, 0x3f	; 63
     e8a:	f8 94       	cli
     e8c:	de bf       	out	0x3e, r29	; 62
     e8e:	0f be       	out	0x3f, r0	; 63
     e90:	cd bf       	out	0x3d, r28	; 61
     e92:	df 91       	pop	r29
     e94:	cf 91       	pop	r28
     e96:	1f 91       	pop	r17
     e98:	0f 91       	pop	r16
     e9a:	ff 90       	pop	r15
     e9c:	ef 90       	pop	r14
     e9e:	df 90       	pop	r13
     ea0:	cf 90       	pop	r12
     ea2:	bf 90       	pop	r11
     ea4:	af 90       	pop	r10
     ea6:	9f 90       	pop	r9
     ea8:	8f 90       	pop	r8
     eaa:	7f 90       	pop	r7
     eac:	6f 90       	pop	r6
     eae:	5f 90       	pop	r5
     eb0:	4f 90       	pop	r4
     eb2:	3f 90       	pop	r3
     eb4:	2f 90       	pop	r2
     eb6:	08 95       	ret

00000eb8 <serial_init>:
     eb8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     ebc:	87 e6       	ldi	r24, 0x67	; 103
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     ec4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     ec8:	e1 ec       	ldi	r30, 0xC1	; 193
     eca:	f0 e0       	ldi	r31, 0x00	; 0
     ecc:	88 e1       	ldi	r24, 0x18	; 24
     ece:	80 83       	st	Z, r24
     ed0:	86 e0       	ldi	r24, 0x06	; 6
     ed2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     ed6:	80 81       	ld	r24, Z
     ed8:	80 6a       	ori	r24, 0xA0	; 160
     eda:	80 83       	st	Z, r24
     edc:	08 95       	ret

00000ede <__vector_18>:
     ede:	1f 92       	push	r1
     ee0:	0f 92       	push	r0
     ee2:	0f b6       	in	r0, 0x3f	; 63
     ee4:	0f 92       	push	r0
     ee6:	11 24       	eor	r1, r1
     ee8:	2f 93       	push	r18
     eea:	8f 93       	push	r24
     eec:	9f 93       	push	r25
     eee:	ef 93       	push	r30
     ef0:	ff 93       	push	r31
     ef2:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <rxtail>
     ef6:	20 91 7e 01 	lds	r18, 0x017E	; 0x80017e <rxhead>
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	82 1b       	sub	r24, r18
     efe:	91 09       	sbc	r25, r1
     f00:	01 97       	sbiw	r24, 0x01	; 1
     f02:	8f 73       	andi	r24, 0x3F	; 63
     f04:	99 27       	eor	r25, r25
     f06:	89 2b       	or	r24, r25
     f08:	79 f0       	breq	.+30     	; 0xf28 <__vector_18+0x4a>
     f0a:	e0 91 7e 01 	lds	r30, 0x017E	; 0x80017e <rxhead>
     f0e:	f0 e0       	ldi	r31, 0x00	; 0
     f10:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f14:	ec 56       	subi	r30, 0x6C	; 108
     f16:	fe 4f       	sbci	r31, 0xFE	; 254
     f18:	80 83       	st	Z, r24
     f1a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <rxhead>
     f1e:	8f 5f       	subi	r24, 0xFF	; 255
     f20:	8f 73       	andi	r24, 0x3F	; 63
     f22:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <rxhead>
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <__vector_18+0x4e>
     f28:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f2c:	ff 91       	pop	r31
     f2e:	ef 91       	pop	r30
     f30:	9f 91       	pop	r25
     f32:	8f 91       	pop	r24
     f34:	2f 91       	pop	r18
     f36:	0f 90       	pop	r0
     f38:	0f be       	out	0x3f, r0	; 63
     f3a:	0f 90       	pop	r0
     f3c:	1f 90       	pop	r1
     f3e:	18 95       	reti

00000f40 <__vector_19>:
     f40:	1f 92       	push	r1
     f42:	0f 92       	push	r0
     f44:	0f b6       	in	r0, 0x3f	; 63
     f46:	0f 92       	push	r0
     f48:	11 24       	eor	r1, r1
     f4a:	2f 93       	push	r18
     f4c:	8f 93       	push	r24
     f4e:	9f 93       	push	r25
     f50:	ef 93       	push	r30
     f52:	ff 93       	push	r31
     f54:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <txhead>
     f58:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <txtail>
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	82 1b       	sub	r24, r18
     f60:	91 09       	sbc	r25, r1
     f62:	8f 73       	andi	r24, 0x3F	; 63
     f64:	99 27       	eor	r25, r25
     f66:	89 2b       	or	r24, r25
     f68:	79 f0       	breq	.+30     	; 0xf88 <__vector_19+0x48>
     f6a:	e0 91 7b 01 	lds	r30, 0x017B	; 0x80017b <txtail>
     f6e:	f0 e0       	ldi	r31, 0x00	; 0
     f70:	ec 52       	subi	r30, 0x2C	; 44
     f72:	fe 4f       	sbci	r31, 0xFE	; 254
     f74:	80 81       	ld	r24, Z
     f76:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     f7a:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <txtail>
     f7e:	8f 5f       	subi	r24, 0xFF	; 255
     f80:	8f 73       	andi	r24, 0x3F	; 63
     f82:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <txtail>
     f86:	05 c0       	rjmp	.+10     	; 0xf92 <__vector_19+0x52>
     f88:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     f8c:	8f 7d       	andi	r24, 0xDF	; 223
     f8e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     f92:	ff 91       	pop	r31
     f94:	ef 91       	pop	r30
     f96:	9f 91       	pop	r25
     f98:	8f 91       	pop	r24
     f9a:	2f 91       	pop	r18
     f9c:	0f 90       	pop	r0
     f9e:	0f be       	out	0x3f, r0	; 63
     fa0:	0f 90       	pop	r0
     fa2:	1f 90       	pop	r1
     fa4:	18 95       	reti

00000fa6 <serial_rxchars>:
     fa6:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <rxhead>
     faa:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <rxtail>
     fae:	89 1b       	sub	r24, r25
     fb0:	8f 73       	andi	r24, 0x3F	; 63
     fb2:	08 95       	ret

00000fb4 <serial_popchar>:
     fb4:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <rxhead>
     fb8:	20 91 7d 01 	lds	r18, 0x017D	; 0x80017d <rxtail>
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	82 1b       	sub	r24, r18
     fc0:	91 09       	sbc	r25, r1
     fc2:	8f 73       	andi	r24, 0x3F	; 63
     fc4:	99 27       	eor	r25, r25
     fc6:	89 2b       	or	r24, r25
     fc8:	69 f0       	breq	.+26     	; 0xfe4 <serial_popchar+0x30>
     fca:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <rxtail>
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	ec 56       	subi	r30, 0x6C	; 108
     fd2:	fe 4f       	sbci	r31, 0xFE	; 254
     fd4:	80 81       	ld	r24, Z
     fd6:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <rxtail>
     fda:	9f 5f       	subi	r25, 0xFF	; 255
     fdc:	9f 73       	andi	r25, 0x3F	; 63
     fde:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <rxtail>
     fe2:	08 95       	ret
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	08 95       	ret

00000fe8 <serial_writechar>:
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	07 fe       	sbrs	r0, 7
     fec:	0e c0       	rjmp	.+28     	; 0x100a <serial_writechar+0x22>
     fee:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <txtail>
     ff2:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <txhead>
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	29 1b       	sub	r18, r25
     ffa:	31 09       	sbc	r19, r1
     ffc:	21 50       	subi	r18, 0x01	; 1
     ffe:	31 09       	sbc	r19, r1
    1000:	2f 73       	andi	r18, 0x3F	; 63
    1002:	33 27       	eor	r19, r19
    1004:	23 2b       	or	r18, r19
    1006:	99 f3       	breq	.-26     	; 0xfee <serial_writechar+0x6>
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <serial_writechar+0x3c>
    100a:	20 91 7b 01 	lds	r18, 0x017B	; 0x80017b <txtail>
    100e:	90 91 7c 01 	lds	r25, 0x017C	; 0x80017c <txhead>
    1012:	30 e0       	ldi	r19, 0x00	; 0
    1014:	29 1b       	sub	r18, r25
    1016:	31 09       	sbc	r19, r1
    1018:	21 50       	subi	r18, 0x01	; 1
    101a:	31 09       	sbc	r19, r1
    101c:	2f 73       	andi	r18, 0x3F	; 63
    101e:	33 27       	eor	r19, r19
    1020:	23 2b       	or	r18, r19
    1022:	61 f0       	breq	.+24     	; 0x103c <serial_writechar+0x54>
    1024:	e0 91 7c 01 	lds	r30, 0x017C	; 0x80017c <txhead>
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	ec 52       	subi	r30, 0x2C	; 44
    102c:	fe 4f       	sbci	r31, 0xFE	; 254
    102e:	80 83       	st	Z, r24
    1030:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <txhead>
    1034:	8f 5f       	subi	r24, 0xFF	; 255
    1036:	8f 73       	andi	r24, 0x3F	; 63
    1038:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <txhead>
    103c:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1040:	80 62       	ori	r24, 0x20	; 32
    1042:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1046:	08 95       	ret

00001048 <serial_writestr>:
    1048:	1f 93       	push	r17
    104a:	cf 93       	push	r28
    104c:	df 93       	push	r29
    104e:	ec 01       	movw	r28, r24
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	11 e0       	ldi	r17, 0x01	; 1
    1054:	18 0f       	add	r17, r24
    1056:	fe 01       	movw	r30, r28
    1058:	e8 0f       	add	r30, r24
    105a:	f1 1d       	adc	r31, r1
    105c:	80 81       	ld	r24, Z
    105e:	88 23       	and	r24, r24
    1060:	21 f0       	breq	.+8      	; 0x106a <serial_writestr+0x22>
    1062:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
    1066:	81 2f       	mov	r24, r17
    1068:	f4 cf       	rjmp	.-24     	; 0x1052 <serial_writestr+0xa>
    106a:	df 91       	pop	r29
    106c:	cf 91       	pop	r28
    106e:	1f 91       	pop	r17
    1070:	08 95       	ret

00001072 <serial_writestr_P>:
    1072:	1f 93       	push	r17
    1074:	cf 93       	push	r28
    1076:	df 93       	push	r29
    1078:	ec 01       	movw	r28, r24
    107a:	80 e0       	ldi	r24, 0x00	; 0
    107c:	11 e0       	ldi	r17, 0x01	; 1
    107e:	18 0f       	add	r17, r24
    1080:	fe 01       	movw	r30, r28
    1082:	e8 0f       	add	r30, r24
    1084:	f1 1d       	adc	r31, r1
    1086:	84 91       	lpm	r24, Z
    1088:	88 23       	and	r24, r24
    108a:	21 f0       	breq	.+8      	; 0x1094 <serial_writestr_P+0x22>
    108c:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <serial_writechar>
    1090:	81 2f       	mov	r24, r17
    1092:	f4 cf       	rjmp	.-24     	; 0x107c <serial_writestr_P+0xa>
    1094:	df 91       	pop	r29
    1096:	cf 91       	pop	r28
    1098:	1f 91       	pop	r17
    109a:	08 95       	ret

0000109c <__mulsi3>:
    109c:	db 01       	movw	r26, r22
    109e:	8f 93       	push	r24
    10a0:	9f 93       	push	r25
    10a2:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muluhisi3>
    10a6:	bf 91       	pop	r27
    10a8:	af 91       	pop	r26
    10aa:	a2 9f       	mul	r26, r18
    10ac:	80 0d       	add	r24, r0
    10ae:	91 1d       	adc	r25, r1
    10b0:	a3 9f       	mul	r26, r19
    10b2:	90 0d       	add	r25, r0
    10b4:	b2 9f       	mul	r27, r18
    10b6:	90 0d       	add	r25, r0
    10b8:	11 24       	eor	r1, r1
    10ba:	08 95       	ret

000010bc <__udivmodhi4>:
    10bc:	aa 1b       	sub	r26, r26
    10be:	bb 1b       	sub	r27, r27
    10c0:	51 e1       	ldi	r21, 0x11	; 17
    10c2:	07 c0       	rjmp	.+14     	; 0x10d2 <__udivmodhi4_ep>

000010c4 <__udivmodhi4_loop>:
    10c4:	aa 1f       	adc	r26, r26
    10c6:	bb 1f       	adc	r27, r27
    10c8:	a6 17       	cp	r26, r22
    10ca:	b7 07       	cpc	r27, r23
    10cc:	10 f0       	brcs	.+4      	; 0x10d2 <__udivmodhi4_ep>
    10ce:	a6 1b       	sub	r26, r22
    10d0:	b7 0b       	sbc	r27, r23

000010d2 <__udivmodhi4_ep>:
    10d2:	88 1f       	adc	r24, r24
    10d4:	99 1f       	adc	r25, r25
    10d6:	5a 95       	dec	r21
    10d8:	a9 f7       	brne	.-22     	; 0x10c4 <__udivmodhi4_loop>
    10da:	80 95       	com	r24
    10dc:	90 95       	com	r25
    10de:	bc 01       	movw	r22, r24
    10e0:	cd 01       	movw	r24, r26
    10e2:	08 95       	ret

000010e4 <__udivmodsi4>:
    10e4:	a1 e2       	ldi	r26, 0x21	; 33
    10e6:	1a 2e       	mov	r1, r26
    10e8:	aa 1b       	sub	r26, r26
    10ea:	bb 1b       	sub	r27, r27
    10ec:	fd 01       	movw	r30, r26
    10ee:	0d c0       	rjmp	.+26     	; 0x110a <__udivmodsi4_ep>

000010f0 <__udivmodsi4_loop>:
    10f0:	aa 1f       	adc	r26, r26
    10f2:	bb 1f       	adc	r27, r27
    10f4:	ee 1f       	adc	r30, r30
    10f6:	ff 1f       	adc	r31, r31
    10f8:	a2 17       	cp	r26, r18
    10fa:	b3 07       	cpc	r27, r19
    10fc:	e4 07       	cpc	r30, r20
    10fe:	f5 07       	cpc	r31, r21
    1100:	20 f0       	brcs	.+8      	; 0x110a <__udivmodsi4_ep>
    1102:	a2 1b       	sub	r26, r18
    1104:	b3 0b       	sbc	r27, r19
    1106:	e4 0b       	sbc	r30, r20
    1108:	f5 0b       	sbc	r31, r21

0000110a <__udivmodsi4_ep>:
    110a:	66 1f       	adc	r22, r22
    110c:	77 1f       	adc	r23, r23
    110e:	88 1f       	adc	r24, r24
    1110:	99 1f       	adc	r25, r25
    1112:	1a 94       	dec	r1
    1114:	69 f7       	brne	.-38     	; 0x10f0 <__udivmodsi4_loop>
    1116:	60 95       	com	r22
    1118:	70 95       	com	r23
    111a:	80 95       	com	r24
    111c:	90 95       	com	r25
    111e:	9b 01       	movw	r18, r22
    1120:	ac 01       	movw	r20, r24
    1122:	bd 01       	movw	r22, r26
    1124:	cf 01       	movw	r24, r30
    1126:	08 95       	ret

00001128 <__divmodsi4>:
    1128:	05 2e       	mov	r0, r21
    112a:	97 fb       	bst	r25, 7
    112c:	1e f4       	brtc	.+6      	; 0x1134 <__divmodsi4+0xc>
    112e:	00 94       	com	r0
    1130:	0e 94 ab 08 	call	0x1156	; 0x1156 <__negsi2>
    1134:	57 fd       	sbrc	r21, 7
    1136:	07 d0       	rcall	.+14     	; 0x1146 <__divmodsi4_neg2>
    1138:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__udivmodsi4>
    113c:	07 fc       	sbrc	r0, 7
    113e:	03 d0       	rcall	.+6      	; 0x1146 <__divmodsi4_neg2>
    1140:	4e f4       	brtc	.+18     	; 0x1154 <__divmodsi4_exit>
    1142:	0c 94 ab 08 	jmp	0x1156	; 0x1156 <__negsi2>

00001146 <__divmodsi4_neg2>:
    1146:	50 95       	com	r21
    1148:	40 95       	com	r20
    114a:	30 95       	com	r19
    114c:	21 95       	neg	r18
    114e:	3f 4f       	sbci	r19, 0xFF	; 255
    1150:	4f 4f       	sbci	r20, 0xFF	; 255
    1152:	5f 4f       	sbci	r21, 0xFF	; 255

00001154 <__divmodsi4_exit>:
    1154:	08 95       	ret

00001156 <__negsi2>:
    1156:	90 95       	com	r25
    1158:	80 95       	com	r24
    115a:	70 95       	com	r23
    115c:	61 95       	neg	r22
    115e:	7f 4f       	sbci	r23, 0xFF	; 255
    1160:	8f 4f       	sbci	r24, 0xFF	; 255
    1162:	9f 4f       	sbci	r25, 0xFF	; 255
    1164:	08 95       	ret

00001166 <__umulhisi3>:
    1166:	a2 9f       	mul	r26, r18
    1168:	b0 01       	movw	r22, r0
    116a:	b3 9f       	mul	r27, r19
    116c:	c0 01       	movw	r24, r0
    116e:	a3 9f       	mul	r26, r19
    1170:	70 0d       	add	r23, r0
    1172:	81 1d       	adc	r24, r1
    1174:	11 24       	eor	r1, r1
    1176:	91 1d       	adc	r25, r1
    1178:	b2 9f       	mul	r27, r18
    117a:	70 0d       	add	r23, r0
    117c:	81 1d       	adc	r24, r1
    117e:	11 24       	eor	r1, r1
    1180:	91 1d       	adc	r25, r1
    1182:	08 95       	ret

00001184 <__muluhisi3>:
    1184:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
    1188:	a5 9f       	mul	r26, r21
    118a:	90 0d       	add	r25, r0
    118c:	b4 9f       	mul	r27, r20
    118e:	90 0d       	add	r25, r0
    1190:	a4 9f       	mul	r26, r20
    1192:	80 0d       	add	r24, r0
    1194:	91 1d       	adc	r25, r1
    1196:	11 24       	eor	r1, r1
    1198:	08 95       	ret

0000119a <_exit>:
    119a:	f8 94       	cli

0000119c <__stop_program>:
    119c:	ff cf       	rjmp	.-2      	; 0x119c <__stop_program>
